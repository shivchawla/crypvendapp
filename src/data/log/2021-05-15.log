{"id":"79169d42-c64c-4a07-adc8-dbf0f08a78a2","timestamp":"2021-05-15T02:12:05.273Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"df2d8e25-f6bc-44f2-bc6f-cae4225fcc13","timestamp":"2021-05-15T02:12:05.278Z","serial":0,"level":"LOG","msg":"ReferenceError: proces is not defined\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:28:15)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"ae50492d-2bad-431f-86c3-7d87c1286687","timestamp":"2021-05-15T02:12:05.278Z","serial":1,"level":"LOG","msg":"ReferenceError: proces is not defined\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:28:15)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"b4d29026-bf24-440a-82cd-62fd5d044dbb","timestamp":"2021-05-15T02:12:29.174Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"3314c849-127e-42d8-8c14-06a19d81516c","timestamp":"2021-05-15T02:12:29.233Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"22d1f670-5043-4363-bfbd-330e35ab836b","timestamp":"2021-05-15T02:12:29.237Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"85622151-b0f6-4776-a7c4-483e5185b90e","timestamp":"2021-05-15T02:12:29.237Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"c6682111-c8be-4a5b-894b-600af6292c7b","timestamp":"2021-05-15T02:12:29.242Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"69d3dcac-e646-4618-938f-2acaacf8239d","timestamp":"2021-05-15T02:12:29.250Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"d8b99715-2d96-4786-b579-b2b1fb4a8c42","timestamp":"2021-05-15T02:12:29.254Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"dd686df2-e48f-49f7-9ac8-2ba03725540d","timestamp":"2021-05-15T02:12:29.255Z","serial":1,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"2b85b250-542d-4e28-b097-a4275d42bb7f","timestamp":"2021-05-15T02:12:29.256Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:399:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:34:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: '/tmp/heartbeat.sock',\n  port: -1 }"}
{"id":"36101548-b4bf-4f8d-b87b-ba77414cb7e5","timestamp":"2021-05-15T02:12:29.255Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"18cff893-82af-4fb7-9d63-4e1e280c9aae","timestamp":"2021-05-15T02:12:29.277Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.6 MB, memFree: 16.8%\n  nodeUptime: 0.00h, osUptime: 83.95h"}
{"id":"47247cbf-bbe9-4f85-9c53-5d85830d5489","timestamp":"2021-05-15T02:12:29.257Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:399:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:34:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:48:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"92f8f0d5-201a-4400-ad0a-eb40ed4eec6c","timestamp":"2021-05-15T02:14:18.260Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"5354385e-82ae-4eb4-b8f6-85cafe5f4c7b","timestamp":"2021-05-15T02:14:18.269Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"29e9da3a-1ecc-43d7-9aea-fe27d9043f53","timestamp":"2021-05-15T02:14:18.326Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"f3c41768-1935-4195-8f70-db9132337321","timestamp":"2021-05-15T02:14:18.322Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"0617da6a-1cb3-4950-b897-8edba2902eba","timestamp":"2021-05-15T02:14:18.338Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"58afabc7-1748-4dfe-9fdb-e6a5ee977ce2","timestamp":"2021-05-15T02:14:18.353Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"440e3a4d-4c09-43bd-aed8-b0a5fb514af0","timestamp":"2021-05-15T02:14:18.333Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"b8ca0b8f-f4ab-427a-b1ef-a7ae5a622d83","timestamp":"2021-05-15T02:14:18.357Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"a1f35671-0e37-4cc3-9fe3-0e4894428581","timestamp":"2021-05-15T02:14:18.361Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"009f8303-1d0e-42a3-b503-186e7d00e620","timestamp":"2021-05-15T02:14:18.362Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:399:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: '/tmp/heartbeat.sock',\n  port: -1 }"}
{"id":"40a6ea3c-268c-49ae-a9ed-3748409b551f","timestamp":"2021-05-15T02:14:18.381Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.5 MB, memFree: 16.0%\n  nodeUptime: 0.00h, osUptime: 83.98h"}
{"id":"ae32497d-b884-44ca-a33c-4ba723f2840e","timestamp":"2021-05-15T02:14:18.363Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:399:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"e03cfc41-0d94-4013-a91d-b90db84c6784","timestamp":"2021-05-15T02:14:18.358Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"97472505-5a5e-4f6e-ad37-b7e0262ef861","timestamp":"2021-05-15T02:15:46.429Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"f299a1ed-7147-4353-a94e-bd357160e7b9","timestamp":"2021-05-15T02:15:46.419Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"3be9ef71-6238-4fe7-8c8e-e73a1682696d","timestamp":"2021-05-15T02:15:46.485Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"0a53facb-b749-40f8-81c9-da3576c589c3","timestamp":"2021-05-15T02:15:46.490Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"e2da8ee6-8378-49eb-9ebe-2b6568df68ff","timestamp":"2021-05-15T02:15:46.490Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"46484d0f-59b9-4ab8-bd48-ed2a08cbb927","timestamp":"2021-05-15T02:15:46.498Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"35f8b7df-e45b-4415-8503-ef0896a6826a","timestamp":"2021-05-15T02:15:46.509Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"5921e02b-ce7c-4262-9789-53d42e07a6ef","timestamp":"2021-05-15T02:15:46.516Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"c91d82b2-f156-4ca6-bc19-d8c874eace2d","timestamp":"2021-05-15T02:15:46.522Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"45c76143-cab5-47fa-9972-f7507b853cfc","timestamp":"2021-05-15T02:15:46.519Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"85b7cb87-d44d-43d2-815b-038b15805df9","timestamp":"2021-05-15T02:15:46.524Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:399:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: '/tmp/heartbeat.sock',\n  port: -1 }"}
{"id":"060809c2-e5e1-4b24-9751-0bb6d911d75f","timestamp":"2021-05-15T02:15:46.546Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.6 MB, memFree: 16.3%\n  nodeUptime: 0.00h, osUptime: 84.01h"}
{"id":"5b8406a2-9bc9-49e5-b3ea-c71497c0fc2f","timestamp":"2021-05-15T02:15:46.525Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:399:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"72930d62-2c8f-4836-a953-f43b55688448","timestamp":"2021-05-15T02:20:11.930Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"87f5cc21-820c-413f-af7e-0044b463d339","timestamp":"2021-05-15T02:20:11.936Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"7e780cfb-486c-455d-b49a-7950f4311f09","timestamp":"2021-05-15T02:20:12.107Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"44fb0a8c-fc64-49e3-9359-f34c5f50c565","timestamp":"2021-05-15T02:20:12.119Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"71d7c6a5-c577-4552-baad-709809ff051b","timestamp":"2021-05-15T02:20:12.118Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"a136cf88-753b-4705-8841-929cf04713c8","timestamp":"2021-05-15T02:20:12.148Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"d699066f-1ffe-41f0-b7fa-665921fe9827","timestamp":"2021-05-15T02:20:12.130Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"07c6b717-4bac-416e-9241-81c64dee14dd","timestamp":"2021-05-15T02:20:12.152Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"76472e42-db84-4131-b4c6-40178994597a","timestamp":"2021-05-15T02:20:12.153Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"2e83525c-a212-4021-8b22-de1fc102123e","timestamp":"2021-05-15T02:20:12.161Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"c6a8a344-6967-4e51-b0c5-7d44a137c9cb","timestamp":"2021-05-15T02:20:12.171Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:399:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: '/tmp/heartbeat.sock',\n  port: -1 }"}
{"id":"006f6fd1-eb19-4de6-a1e2-45a12cc5f9c8","timestamp":"2021-05-15T02:20:12.200Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.9 MB, memFree: 12.0%\n  nodeUptime: 0.00h, osUptime: 84.08h"}
{"id":"6422ce9f-6661-4cd3-ae94-ba351ed7986f","timestamp":"2021-05-15T02:20:12.172Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:399:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"44f92286-1861-48c7-8857-39a165d8b486","timestamp":"2021-05-15T02:20:12.381Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"d7f98e8d-d4bd-421e-aa30-397af13219f3","timestamp":"2021-05-15T03:02:19.763Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"3c286863-5377-46fc-97b5-3671ec7efeb3","timestamp":"2021-05-15T03:02:19.771Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"2d8e65d0-98d6-497d-b892-fc15e2572594","timestamp":"2021-05-15T03:02:19.904Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"11a5cd12-9c9f-4f6d-8ac1-5f6aadcf0b71","timestamp":"2021-05-15T03:02:19.925Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"904c4660-daa3-4eee-b3af-8f961ee62934","timestamp":"2021-05-15T03:02:19.879Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"2329c411-c674-42a3-bfac-b74f08539322","timestamp":"2021-05-15T03:02:19.886Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"780b73cc-cb42-4e68-9a1f-45efb9d978cb","timestamp":"2021-05-15T03:02:19.890Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"a0b38bcd-6c65-45df-9423-33aa3a761ce7","timestamp":"2021-05-15T03:02:19.934Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"fe0911f8-dbc4-49c3-ad20-1be47297b971","timestamp":"2021-05-15T03:02:19.943Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:400:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: '/tmp/heartbeat.sock',\n  port: -1 }"}
{"id":"7b38369c-c534-4497-8c4c-e406bcd8aa4c","timestamp":"2021-05-15T03:02:19.977Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.8 MB, memFree: 15.7%\n  nodeUptime: 0.00h, osUptime: 84.78h"}
{"id":"b9d8f5e3-f10b-4b56-89b1-b68516578608","timestamp":"2021-05-15T03:02:19.950Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:400:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"d4a65180-3d00-430a-a7c5-c3c7c80da012","timestamp":"2021-05-15T03:02:19.940Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"908ea651-061c-4209-bdb7-f07e11447757","timestamp":"2021-05-15T03:02:19.935Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"a01d55d7-48ed-400c-8b04-a6a73dda8181","timestamp":"2021-05-15T03:02:20.334Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"28cb28bc-ffbc-42c6-9632-2be1e3bc9024","timestamp":"2021-05-15T03:05:45.782Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"3cfca832-50a9-4c10-9319-177fb8d2f695","timestamp":"2021-05-15T03:05:45.787Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"e988a8cb-62f0-4d03-a1d7-36861b3db0c4","timestamp":"2021-05-15T03:05:45.851Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"0dcbbbc3-5296-43c3-9e23-ed50c74189e8","timestamp":"2021-05-15T03:05:45.847Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"1ba5e4b3-7215-4141-9f42-79839c59b536","timestamp":"2021-05-15T03:05:45.870Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"9435d4cf-5a2f-4ece-bef7-01314753f902","timestamp":"2021-05-15T03:05:45.858Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"522a746f-9576-4a88-b2b3-41314edfc28f","timestamp":"2021-05-15T03:05:45.894Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"bf2efc2e-cc5a-403b-a34a-1e8a038abd48","timestamp":"2021-05-15T03:05:45.902Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"56173f25-20f6-4c90-ab9c-b25bffcb8b92","timestamp":"2021-05-15T03:05:45.901Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"ebbd4006-bc61-4adb-9f86-473790e6e205","timestamp":"2021-05-15T03:05:45.910Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"aa4c916a-9b74-441f-9c0c-0be0d7449214","timestamp":"2021-05-15T03:05:45.912Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:400:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"6b64288c-431a-45c4-b277-a89f964c6f44","timestamp":"2021-05-15T03:05:45.911Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:400:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: '/tmp/heartbeat.sock',\n  port: -1 }"}
{"id":"78420274-d965-4799-b7c9-1a2df4b4c6ac","timestamp":"2021-05-15T03:05:45.939Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.9 MB, memFree: 17.9%\n  nodeUptime: 0.00h, osUptime: 84.84h"}
{"id":"ef0e9b18-1006-478f-ba62-fcf4a1b56978","timestamp":"2021-05-15T03:05:48.346Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"5a63da45-f30f-4331-a024-d3cf0cc6b611","timestamp":"2021-05-15T03:27:41.159Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"e8e4a9cc-aae4-4419-8677-6b325f0c50f1","timestamp":"2021-05-15T03:27:41.167Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"1a868b98-22ef-47c6-a8b9-9a1cd3ee8fcc","timestamp":"2021-05-15T03:27:41.226Z","serial":1,"level":"LOG","msg":"WTF - 1"}
{"id":"dca58b2e-7c2b-4def-99ad-ffc5f1e582f2","timestamp":"2021-05-15T03:27:41.226Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"c300cd9b-f8eb-4eb1-beea-783ee4706ea4","timestamp":"2021-05-15T03:27:41.232Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"b487a4db-f15a-46f1-b940-f98af8133ea4","timestamp":"2021-05-15T03:27:41.274Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"fa77ac03-de2e-4ad7-8f3f-cfc6ce34e824","timestamp":"2021-05-15T03:27:41.237Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"93a93b32-babc-46f2-8074-e92963e87dbc","timestamp":"2021-05-15T03:27:41.253Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"389d0ca5-db64-49ff-be27-af84609b6f4a","timestamp":"2021-05-15T03:27:41.283Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"bb120d95-6081-417a-b246-6c3da9774a1a","timestamp":"2021-05-15T03:27:41.296Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"17f46d60-e2db-4b70-993c-ea6519159ec2","timestamp":"2021-05-15T03:27:41.284Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"b8232f42-03e9-46b9-ac7c-3a6f37b07db1","timestamp":"2021-05-15T03:27:41.321Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 62.0 MB, memFree: 17.0%\n  nodeUptime: 0.00h, osUptime: 85.21h"}
{"id":"32b1a6aa-35b7-4e2d-b85e-b1ada17b286a","timestamp":"2021-05-15T03:27:41.295Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: '/tmp/heartbeat.sock',\n  port: -1 }"}
{"id":"ffdabb0a-ec09-44db-94e4-f2b8bfeb5768","timestamp":"2021-05-15T03:27:41.294Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"12191ce4-f4f8-44a1-8e71-543c3e93802e","timestamp":"2021-05-15T03:27:41.569Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"d96a2898-be43-485b-bcff-5df583f688cb","timestamp":"2021-05-15T03:52:26.347Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"6337d4c2-a635-42b1-997a-f77e16891357","timestamp":"2021-05-15T03:52:26.356Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"2fb547ed-d2ba-456a-89c0-e943fea74e5a","timestamp":"2021-05-15T03:52:26.416Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"f2a5b8ec-5e70-4784-9bf5-aebe83d2bdab","timestamp":"2021-05-15T03:52:26.411Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"f775c478-f9a5-4561-b20a-f1953e34062d","timestamp":"2021-05-15T03:52:26.411Z","serial":1,"level":"LOG","msg":"WTF - 1"}
{"id":"c9ce9795-48be-4ec7-b9c7-16cabacb7d22","timestamp":"2021-05-15T03:52:26.421Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"fe94f69b-6207-4204-842c-74e989eec8ca","timestamp":"2021-05-15T03:52:26.434Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"ead0ca5a-a4a9-4ca0-9933-0a2d73c56f72","timestamp":"2021-05-15T03:52:26.425Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"0cec818e-ecec-4173-b47a-059e786fecfd","timestamp":"2021-05-15T03:52:26.439Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"fa39d8e2-b719-46f1-adc7-792ea4c085b7","timestamp":"2021-05-15T03:52:26.446Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: '/tmp/heartbeat.sock',\n  port: -1 }"}
{"id":"25bbf9b1-d557-46f4-92a5-60e7c4163a74","timestamp":"2021-05-15T03:52:26.444Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"9a4d5ad8-1a50-4729-a1f6-d82e8a933f75","timestamp":"2021-05-15T03:52:26.442Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"e8f57c54-4941-4da0-a645-2c9aa8dd1578","timestamp":"2021-05-15T03:52:26.451Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied /tmp/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"4f8a3d92-98f6-4cb4-88f1-2d99596c3314","timestamp":"2021-05-15T03:52:26.485Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 62.1 MB, memFree: 13.2%\n  nodeUptime: 0.00h, osUptime: 85.62h"}
{"id":"7b58501b-4e5d-499e-9374-dafd67cf9df4","timestamp":"2021-05-15T03:52:29.576Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"145573d9-3ff8-4584-a266-e0b54d5e6669","timestamp":"2021-05-15T03:55:47.935Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"cfa955c7-cf1b-4f7f-bbfc-0c4764243603","timestamp":"2021-05-15T03:55:47.940Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"1ae68240-f935-404d-adc1-df3f3b6d3528","timestamp":"2021-05-15T03:55:48.001Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"859dcd1e-4704-43ab-8819-a84abf7a91e6","timestamp":"2021-05-15T03:55:47.995Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"5ea1e9b5-4814-4996-b3f6-03f4723706ef","timestamp":"2021-05-15T03:55:48.006Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"67ad28dd-6fe5-4c64-802b-cedd7076ee39","timestamp":"2021-05-15T03:55:48.009Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"6bd6dee0-2e21-4805-a990-63acdfa6980a","timestamp":"2021-05-15T03:55:47.995Z","serial":1,"level":"LOG","msg":"WTF - 1"}
{"id":"8c02d9f0-bfcd-41d6-806c-2b2b56a50f90","timestamp":"2021-05-15T03:55:48.020Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"1a8c5924-b565-4015-a0a5-30a70c42ade0","timestamp":"2021-05-15T03:55:48.025Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"4a89b316-45d8-439b-a363-1e02c7db0713","timestamp":"2021-05-15T03:55:48.025Z","serial":1,"level":"LOG","msg":"browser not connected"}
{"id":"ee5beb1b-8c3d-4700-8fbd-0a5d2ae03f7c","timestamp":"2021-05-15T03:55:48.026Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"05222839-90c3-4876-8e4f-77d5061c6a00","timestamp":"2021-05-15T03:55:48.038Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"b08b0f7e-50a0-45c5-a28b-93c4ab32983f","timestamp":"2021-05-15T03:55:48.036Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: 'heartbeat.sock',\n  port: -1 }"}
{"id":"dc4177c5-fd74-44f1-96a2-ba36521beaa9","timestamp":"2021-05-15T03:55:48.062Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 62.1 MB, memFree: 14.9%\n  nodeUptime: 0.00h, osUptime: 85.67h"}
{"id":"b9593adb-de77-4112-9efc-b34873d6ddec","timestamp":"2021-05-15T03:55:48.708Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"2dcbb9c7-a9d2-4ad1-b2e3-231ff18b882d","timestamp":"2021-05-15T03:56:33.682Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"44dc77ce-b960-411c-864f-a5a7a08f7dd7","timestamp":"2021-05-15T03:56:33.687Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"1460e0ed-5fa5-46f3-9969-dce91444cbdb","timestamp":"2021-05-15T03:56:33.762Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"9c91acf9-55de-49da-9d71-00e98a34863c","timestamp":"2021-05-15T03:56:33.742Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"653b9d46-b9bf-4ece-899c-94b4df92773e","timestamp":"2021-05-15T03:56:33.742Z","serial":1,"level":"LOG","msg":"WTF - 1"}
{"id":"f7447ee2-52c4-4b56-a572-0aff3044638b","timestamp":"2021-05-15T03:56:33.775Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"69f36dac-80e0-4760-a460-61b1c8dd41ea","timestamp":"2021-05-15T03:56:33.796Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"f874a4aa-200e-47d8-89a8-601848bef0f8","timestamp":"2021-05-15T03:56:33.761Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"cf71553a-8114-4579-bf7e-0f7815fea067","timestamp":"2021-05-15T03:56:33.806Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"faee235f-a778-47e7-8ac2-a4da0025531d","timestamp":"2021-05-15T03:56:33.819Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied /heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: '/heartbeat.sock',\n  port: -1 }"}
{"id":"a030883a-f242-4cc2-8b7c-b91914659f27","timestamp":"2021-05-15T03:56:33.805Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"5e22e3f2-b4f4-4cee-a4df-a9db2c15de9a","timestamp":"2021-05-15T03:56:33.862Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 62.0 MB, memFree: 14.9%\n  nodeUptime: 0.00h, osUptime: 85.69h"}
{"id":"1a229f0f-44f2-41e7-b512-c471746062dc","timestamp":"2021-05-15T03:56:33.823Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied /heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"f703b9a5-674b-4875-92a2-2b81ba67e78f","timestamp":"2021-05-15T03:56:33.809Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"923dea7e-e576-4043-bde1-b11e55ca8f56","timestamp":"2021-05-15T03:56:35.341Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"8930507e-0ebb-4d40-9f0f-3e45b5a1d84d","timestamp":"2021-05-15T03:58:52.245Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"13054125-6b42-4780-b5cc-ca7c0b043614","timestamp":"2021-05-15T03:58:52.254Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"0b45fc83-3301-4d2d-8885-836d0bc9acc6","timestamp":"2021-05-15T03:58:52.306Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"a941ba6f-6b54-4503-a015-f38b588eb24d","timestamp":"2021-05-15T03:58:52.312Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"1f5692f6-4fdc-40d3-9758-4c4831a93aab","timestamp":"2021-05-15T03:58:52.312Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"6414dfdf-873d-4c48-b637-d52c8c363aff","timestamp":"2021-05-15T03:58:52.323Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"f1dabf0c-2c61-4003-8cd7-1875981961af","timestamp":"2021-05-15T03:58:52.307Z","serial":0,"level":"LOG","msg":"WTF - 1"}
{"id":"8c1f8dcb-9375-48fd-a181-1b7d72b6fadb","timestamp":"2021-05-15T03:58:52.340Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"b2ec1e22-7384-4050-889b-7d9dcedfe0bb","timestamp":"2021-05-15T03:58:52.346Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"d3a7c0b2-79f3-407a-b7df-22d897bba084","timestamp":"2021-05-15T03:58:52.350Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"00ccea99-963c-457e-9559-f3f9398dea84","timestamp":"2021-05-15T03:58:52.352Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"a48b6575-bb87-42a5-a75c-814fcb3af4c8","timestamp":"2021-05-15T03:58:52.354Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied /heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"e1c0f49a-4695-4e8e-b29b-4e509d42cd6e","timestamp":"2021-05-15T03:58:52.353Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied /heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address: '/heartbeat.sock',\n  port: -1 }"}
{"id":"13485b4a-0c8a-405c-98e9-6b940f5fae74","timestamp":"2021-05-15T03:58:52.379Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.7 MB, memFree: 14.4%\n  nodeUptime: 0.00h, osUptime: 85.73h"}
{"id":"5f5ef996-0aff-4b63-a49e-2666aaf597dc","timestamp":"2021-05-15T04:03:23.504Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"cd865061-ad70-43fe-972c-08db5af43d3c","timestamp":"2021-05-15T04:03:23.570Z","serial":1,"level":"LOG","msg":"WTF - 1"}
{"id":"511ba49c-1386-443d-a4f0-a3ad9c844e9c","timestamp":"2021-05-15T04:03:23.508Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"b252259f-d273-477c-a9c8-c98ecd86d4d7","timestamp":"2021-05-15T04:03:23.570Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"9dbecd90-776a-47e5-b517-49511e2b9b04","timestamp":"2021-05-15T04:03:23.581Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"2ed8892e-43bd-4fe0-8da1-ed177e6004f0","timestamp":"2021-05-15T04:03:23.585Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"834c64ae-ae6d-450a-be48-9849e9085e91","timestamp":"2021-05-15T04:03:23.599Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"c8a93c8c-2a95-4827-9e4d-e5475b9ed9b1","timestamp":"2021-05-15T04:03:23.576Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"800635d7-b430-4578-88a6-6d533295e74e","timestamp":"2021-05-15T04:03:23.603Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"cdaf0d28-9e6e-46ab-a66d-7899574ab0e6","timestamp":"2021-05-15T04:03:23.604Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"6d884446-0728-4979-a0fc-a356f7264c6b","timestamp":"2021-05-15T04:03:23.608Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"e5affe6b-7c9a-4d78-9183-e7f805b8412f","timestamp":"2021-05-15T04:03:23.610Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address:\n   'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\lib/heartbeat.sock',\n  port: -1 }"}
{"id":"4eea1863-7c27-4041-943a-070253b34a15","timestamp":"2021-05-15T04:03:23.614Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib/heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"190d9ad7-186f-4f94-b709-e9263dbae918","timestamp":"2021-05-15T04:03:23.651Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.5 MB, memFree: 10.3%\n  nodeUptime: 0.00h, osUptime: 85.80h"}
{"id":"0a865189-2b9d-479b-9798-b5c42bf089fe","timestamp":"2021-05-15T04:03:23.899Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"12f47403-7d4a-4fb4-aa45-b55191962fa9","timestamp":"2021-05-15T04:04:49.667Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"3c49ed06-3b60-407b-b5e2-502913b73f5f","timestamp":"2021-05-15T04:04:49.672Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"e19dfaef-3e2c-4428-94c1-222debc0e961","timestamp":"2021-05-15T04:04:49.736Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"87dc897a-cff2-4832-a858-e292e9381242","timestamp":"2021-05-15T04:04:49.736Z","serial":1,"level":"LOG","msg":"WTF - 1"}
{"id":"1a311459-e4ca-4cf2-84e0-3c973e0c7bb7","timestamp":"2021-05-15T04:04:49.743Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"8bfcce55-8717-4420-9735-767253e4bfb1","timestamp":"2021-05-15T04:04:49.747Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"67a8db0e-a1c6-45dc-b6c1-a49a957313d3","timestamp":"2021-05-15T04:04:49.754Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"b2dcf79b-2ab8-4db6-adb8-8788a4fb8c9e","timestamp":"2021-05-15T04:04:49.780Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"16a4da75-1077-4cae-b47f-bba81653993a","timestamp":"2021-05-15T04:04:49.790Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"89178eb1-59a7-43a2-9e50-9bb5fb059843","timestamp":"2021-05-15T04:04:49.798Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"a1633947-7a76-43c6-b554-7db50b79f747","timestamp":"2021-05-15T04:04:49.800Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address:\n   'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\lib\\\\heartbeat.sock',\n  port: -1 }"}
{"id":"2a5e20d3-27dc-4a74-9faf-69e1c8c42af3","timestamp":"2021-05-15T04:04:49.802Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:401:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"647f091c-8529-41d0-a2be-78b22a0ab451","timestamp":"2021-05-15T04:04:49.788Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"a0c73d39-e4b9-45c3-a472-ae683a49295c","timestamp":"2021-05-15T04:04:49.853Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.9 MB, memFree: 10.6%\n  nodeUptime: 0.00h, osUptime: 85.82h"}
{"id":"596fa197-8c9d-4151-b7ab-e7c9b80c6425","timestamp":"2021-05-15T04:04:53.995Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"57b0363e-6ce4-4817-9aeb-0355a04fa6d0","timestamp":"2021-05-15T04:06:10.441Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"3ff2b28a-4fa2-471b-aab1-b52d62c86f96","timestamp":"2021-05-15T04:06:10.447Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"dbfeb39e-a8c5-49dc-a646-ea1b15d47159","timestamp":"2021-05-15T04:06:10.524Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"0a5c8bf0-7dad-45ae-b85e-3cbb7eeb3890","timestamp":"2021-05-15T04:06:10.520Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"35dfa529-c1d9-4d5e-bb45-07367796405c","timestamp":"2021-05-15T04:06:10.521Z","serial":0,"level":"LOG","msg":"WTF - 1"}
{"id":"3c454879-746d-47ee-ab93-7c501270066f","timestamp":"2021-05-15T04:06:10.531Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"566384b9-f110-459a-9bca-48c2805f9aae","timestamp":"2021-05-15T04:06:10.538Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"9d0dfcd1-5e14-4983-a93a-9dc8fca452d6","timestamp":"2021-05-15T04:06:10.556Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"c04d2011-8aa3-489f-a353-9c2a6a97ed48","timestamp":"2021-05-15T04:06:10.593Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 62.2 MB, memFree: 10.1%\n  nodeUptime: 0.00h, osUptime: 85.85h"}
{"id":"204bce93-5d25-450d-bce9-49b147882946","timestamp":"2021-05-15T04:06:10.563Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"bb9314c5-9bff-473c-ac68-f7796fe2947c","timestamp":"2021-05-15T04:06:10.564Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"bcb08285-8ed2-4093-b332-d926c4e89e10","timestamp":"2021-05-15T04:06:10.765Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"2ab74277-f328-4614-ad28-9fe4b900b646","timestamp":"2021-05-15T04:09:02.152Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"7a831892-98da-4dce-815a-e94abc914a71","timestamp":"2021-05-15T04:09:02.161Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"2283c2a8-a8f2-4efe-b0a2-f1cdc7373f16","timestamp":"2021-05-15T04:09:02.215Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"991a69f4-4991-4151-9f63-3d56a5324fa9","timestamp":"2021-05-15T04:09:02.217Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"66cd816b-56a7-43de-b403-78af5159995d","timestamp":"2021-05-15T04:09:02.233Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"8c10ed74-bfaf-44c5-a9a2-ed0103e2f282","timestamp":"2021-05-15T04:09:02.215Z","serial":1,"level":"LOG","msg":"DEBUG100"}
{"id":"e3ef33fd-e2c9-4ce6-b8af-cda9cf08b7fc","timestamp":"2021-05-15T04:09:02.255Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"d04065f8-dd88-4ba5-82a2-7dcf7bbfc256","timestamp":"2021-05-15T04:09:02.263Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"8d399ca7-4475-463e-863e-4fc40f672762","timestamp":"2021-05-15T04:09:02.264Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"f073ef7f-974b-4c1c-bfe1-fbab0add0845","timestamp":"2021-05-15T04:09:02.294Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.7 MB, memFree: 9.9%\n  nodeUptime: 0.00h, osUptime: 85.89h"}
{"id":"d0128b2d-1f26-4365-a48a-7dbe125c842a","timestamp":"2021-05-15T04:09:04.125Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"d425bdcd-5128-419b-8abf-c299a6dccc00","timestamp":"2021-05-15T04:18:56.082Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"3bc60d4e-b3f6-474b-8925-823ee655aba4","timestamp":"2021-05-15T04:18:56.087Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"56863994-0817-4a6d-ad60-e334e25fe64b","timestamp":"2021-05-15T04:18:56.234Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"5fc07324-37d1-48d2-aa63-45422f177a69","timestamp":"2021-05-15T04:18:56.145Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"dcc31223-c351-43b5-a134-c4e9e020088f","timestamp":"2021-05-15T04:18:56.246Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"8ff17c32-a1f1-4a76-a53f-159a9c1f03bd","timestamp":"2021-05-15T04:18:56.235Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"eb9faecc-e2e1-4d32-8ce5-d425252850ea","timestamp":"2021-05-15T04:18:56.217Z","serial":0,"level":"LOG","msg":"Server {\n  _events: [Object: null prototype] { connection: [Function] },\n  _eventsCount: 1,\n  _maxListeners: undefined,\n  _connections: 0,\n  _handle: null,\n  _usingWorkers: false,\n  _workers: [],\n  _unref: false,\n  allowHalfOpen: false,\n  pauseOnConnect: false,\n  [Symbol(asyncId)]: -1 }"}
{"id":"cbbb97d3-14e8-4478-8e57-7dc70a7ffb0b","timestamp":"2021-05-15T04:18:56.263Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"c33c36c7-be94-4ea8-83c2-4d471e4917f7","timestamp":"2021-05-15T04:18:56.268Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"853bca13-2b14-4639-a661-b4c65b2fa567","timestamp":"2021-05-15T04:18:56.269Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"7ee7062b-afe5-4b36-bded-fb551ad3ac81","timestamp":"2021-05-15T04:18:56.284Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:404:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"bb39435a-1801-4413-8197-e06007171fd3","timestamp":"2021-05-15T04:18:56.317Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.8 MB, memFree: 17.0%\n  nodeUptime: 0.00h, osUptime: 86.06h"}
{"id":"6e24d53c-7b08-4002-abc6-53cc4c90f7f7","timestamp":"2021-05-15T04:18:56.267Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"06077a83-62e2-4a0a-bfa8-d9dbaf6ecb51","timestamp":"2021-05-15T04:18:56.280Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:404:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address:\n   'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\lib\\\\heartbeat.sock',\n  port: -1 }"}
{"id":"9eb98944-98c8-4369-8d1c-05db06fde6ed","timestamp":"2021-05-15T04:18:56.943Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"d19317b0-f8c0-41d0-a09a-33179d6bb5b4","timestamp":"2021-05-15T04:20:16.022Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"bbfc1dd9-e54d-461a-ba59-90670c1b0d87","timestamp":"2021-05-15T04:20:16.027Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"0ca4ef00-7dac-4675-98fa-74cbff60dd94","timestamp":"2021-05-15T04:20:16.092Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"ad27c57d-5c88-4a56-abac-8567dd0119e1","timestamp":"2021-05-15T04:20:16.080Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"33dcbf4b-acea-4975-884c-1627151e9694","timestamp":"2021-05-15T04:20:16.097Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"131f69ff-fcb8-448c-93d7-c7ef69749180","timestamp":"2021-05-15T04:20:16.111Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"8666d2ee-1bd9-4e54-9461-528c8ff4d016","timestamp":"2021-05-15T04:20:16.084Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"ff01f14c-2ecd-4127-8e0c-63db60d27f47","timestamp":"2021-05-15T04:20:16.117Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"1de87213-bf70-4231-a4d0-ee820eb24776","timestamp":"2021-05-15T04:20:16.121Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:400:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address:\n   'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\lib\\\\heartbeat.sock',\n  port: -1 }"}
{"id":"58b84afc-2de7-44ac-8147-cb9f67277d57","timestamp":"2021-05-15T04:20:16.118Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"b044de89-8354-40d5-b0cc-6f1187b6236c","timestamp":"2021-05-15T04:20:16.154Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.9 MB, memFree: 16.1%\n  nodeUptime: 0.00h, osUptime: 86.08h"}
{"id":"7ac55798-9203-4f5d-a0fe-5af86c17e586","timestamp":"2021-05-15T04:20:16.116Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"bdc4dfd6-c697-46c9-912a-9ac1adf6f176","timestamp":"2021-05-15T04:20:16.122Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:400:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"a61e8493-ec12-4dc2-a416-5f38fde192f0","timestamp":"2021-05-15T04:20:16.216Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"2211d39b-fe32-4269-8549-33fe3bdaacae","timestamp":"2021-05-15T04:21:49.846Z","serial":0,"level":"LOG","msg":"[ 'C:\\\\Program Files\\\\nodejs\\\\node.exe',\n  'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\bin\\\\lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"87e3d426-9ebd-45c0-9918-4598b4625358","timestamp":"2021-05-15T04:21:49.851Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"7681fe0a-ef25-4eff-ad66-86f124b33121","timestamp":"2021-05-15T04:21:49.906Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"7cafec4a-f2a8-48a4-bb55-b88d93c828c4","timestamp":"2021-05-15T04:21:49.903Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"8efe9c97-d173-46d5-92f4-dd6014beb8a7","timestamp":"2021-05-15T04:21:49.925Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"c9e6aa50-e4b2-4979-91bc-122bb9e50569","timestamp":"2021-05-15T04:21:49.910Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"52d6f269-5c50-4f1b-803a-0d63581340ab","timestamp":"2021-05-15T04:21:49.906Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"f53d4ea8-8825-400c-9ecb-cb615bc491fe","timestamp":"2021-05-15T04:21:49.928Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"e3cf2014-c377-4c89-8c36-40c93bb05ec0","timestamp":"2021-05-15T04:21:49.928Z","serial":1,"level":"LOG","msg":"browser not connected"}
{"id":"4681f10f-014d-4daf-87fd-53b3bd183c52","timestamp":"2021-05-15T04:21:49.931Z","serial":0,"level":"LOG","msg":"lamassu-machine bailing out momentarily..."}
{"id":"d99eb67d-c75d-42d5-9fe0-3d55006ee5ea","timestamp":"2021-05-15T04:21:49.967Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.00, memUse: 61.5 MB, memFree: 15.5%\n  nodeUptime: 0.00h, osUptime: 86.11h"}
{"id":"e0d75aa6-21f3-4152-b3fd-5965ac8e5c9d","timestamp":"2021-05-15T04:21:49.940Z","serial":0,"level":"LOG","msg":"Error: listen EACCES: permission denied C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:400:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)"}
{"id":"af3c91e6-44ea-4fd0-883e-c4cecdfe9ca5","timestamp":"2021-05-15T04:21:49.933Z","serial":0,"level":"LOG","msg":"{ Error: listen EACCES: permission denied C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\heartbeat.sock\n    at Server.setupListenHandle [as _listen2] (net.js:1263:19)\n    at listenInCluster (net.js:1328:12)\n    at Server.listen (net.js:1426:5)\n    at Brain._initHeartbeat [as _initHearbeat] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:400:19)\n    at Brain.init [as _init] (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:371:8)\n    at Brain.run (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\lib\\brain.js:226:8)\n    at startBrain (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:35:9)\n    at Object.<anonymous> (C:\\Users\\shivc\\Documents\\Crypto\\lamassu-machine\\bin\\lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  code: 'EACCES',\n  errno: 'EACCES',\n  syscall: 'listen',\n  address:\n   'C:\\\\Users\\\\shivc\\\\Documents\\\\Crypto\\\\lamassu-machine\\\\lib\\\\heartbeat.sock',\n  port: -1 }"}
{"id":"07236efd-396d-41d9-9334-0eaaa3ef4fe8","timestamp":"2021-05-15T04:21:50.582Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"9d1fc5ca-bfb6-481d-8702-4e1340f7ad61","timestamp":"2021-05-15T16:32:20.599Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"d4c47602-3ddd-440a-a077-b0a80efbe332","timestamp":"2021-05-15T16:32:21.129Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"8b5bcdf0-29f2-484d-99c4-d16c96d425b1","timestamp":"2021-05-15T16:32:21.156Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"5bfdfad1-2785-4312-9834-4951d5c00f6b","timestamp":"2021-05-15T16:32:21.165Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"52dd525b-cbc0-4d25-a7b2-b628f29fd2ae","timestamp":"2021-05-15T16:32:21.124Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"5f4675c3-907a-4b0c-95ef-a304b8ae1ec2","timestamp":"2021-05-15T16:32:20.613Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"43e88f92-92ce-4010-b831-514d3f4928d7","timestamp":"2021-05-15T16:32:21.171Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"0b33d8aa-74de-4254-92fc-56ff69f83f46","timestamp":"2021-05-15T16:32:21.129Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"3cf35378-c8c3-41ce-9dec-696bc5447fc6","timestamp":"2021-05-15T16:32:21.180Z","serial":0,"level":"LOG","msg":"{ Error: Could not locate the bindings file. Tried:\n → /mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/build/serialport.node\n → /mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/build/Debug/serialport.node\n → /mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/build/Release/serialport.node\n → /mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/out/Debug/serialport.node\n → /mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/Debug/serialport.node\n → /mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/out/Release/serialport.node\n → /mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/Release/serialport.node\n → /mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/build/default/serialport.node\n → /mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/compiled/10.24.1/linux/x64/serialport.node\n    at bindings (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/node_modules/bindings/bindings.js:93:9)\n    at Object.<anonymous> (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/lib/bindings/linux.js:2:36)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Module.require (internal/modules/cjs/loader.js:692:17)\n    at require (internal/modules/cjs/helpers.js:25:18)\n    at Object.<anonymous> (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/lib/bindings/auto-detect.js:16:22)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Module.require (internal/modules/cjs/loader.js:692:17)\n    at require (internal/modules/cjs/helpers.js:25:18)\n    at Object.<anonymous> (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/lib/index.js:3:17)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Module.require (internal/modules/cjs/loader.js:692:17)\n    at require (internal/modules/cjs/helpers.js:25:18)\n    at Object.<anonymous> (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/printer/zebra.js:1:20)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Module.require (internal/modules/cjs/loader.js:692:17)\n    at require (internal/modules/cjs/helpers.js:25:18)\n    at zebra (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/printer/loader.js:7:21)\n    at Promise (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/printer/loader.js:67:22)\n    at new Promise (<anonymous>)\n    at Object.load (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/printer/loader.js:48:10)\n    at new Brain (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/brain.js:108:17)\n    at startBrain (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine:33:11)\n    at Object.<anonymous> (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine:49:1)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)\n  tries:\n   [ '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/build/serialport.node',\n     '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/build/Debug/serialport.node',\n     '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/build/Release/serialport.node',\n     '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/out/Debug/serialport.node',\n     '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/Debug/serialport.node',\n     '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/out/Release/serialport.node',\n     '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/Release/serialport.node',\n     '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/build/default/serialport.node',\n     '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/serialport/compiled/10.24.1/linux/x64/serialport.node' ] }"}
{"id":"742e3cf3-0937-4bc6-8583-724a0fb8c22c","timestamp":"2021-05-15T16:32:21.178Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"bbd08338-d221-4ece-a9e0-1948c0079759","timestamp":"2021-05-15T16:32:21.331Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 60.7 MB, memFree: 23.0%\n  nodeUptime: 0.00h, osUptime: 28.27h"}
{"id":"1445b36b-de01-4966-9569-856c15b2ee8a","timestamp":"2021-05-15T16:32:21.170Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"85d5f85e-f59b-4042-ba90-792c4d53d7a8","timestamp":"2021-05-15T16:32:22.552Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"e7d52a9a-cee5-4b90-8077-6b8281a50753","timestamp":"2021-05-15T16:47:13.224Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"f984ec6b-189a-454b-88f5-6e4524eb0929","timestamp":"2021-05-15T16:53:22.659Z","serial":0,"level":"LOG","msg":"websocket error { Error: write EPIPE\n    at afterWriteDispatched (internal/stream_base_commons.js:78:25)\n    at writeGeneric (internal/stream_base_commons.js:73:3)\n    at Socket._writeGeneric (net.js:714:5)\n    at Socket._write (net.js:726:8)\n    at doWrite (_stream_writable.js:415:12)\n    at writeOrBuffer (_stream_writable.js:399:5)\n    at Socket.Writable.write (_stream_writable.js:299:11)\n    at Sender.sendFrame (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/Sender.js:390:20)\n    at Sender.doClose (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/Sender.js:153:10)\n    at Sender.close (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/Sender.js:140:12)\n    at WebSocket.close (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/WebSocket.js:281:18)\n    at Receiver._receiver.onclose (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/WebSocket.js:151:34)\n    at Receiver.controlMessage (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/Receiver.js:425:14)\n    at Receiver.getData (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/Receiver.js:325:12)\n    at Receiver.startLoop (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/Receiver.js:165:16)\n    at Receiver.add (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/Receiver.js:139:10)\n    at Socket._ultron.on (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/WebSocket.js:138:22)\n    at Socket.emit (events.js:198:13)\n    at addChunk (_stream_readable.js:288:12)\n    at readableAddChunk (_stream_readable.js:269:11)\n    at Socket.Readable.push (_stream_readable.js:224:10)\n    at TCP.onStreamRead (internal/stream_base_commons.js:94:17) errno: 'EPIPE', code: 'EPIPE', syscall: 'write' }"}
{"id":"3f95f4b1-665e-4b4f-9b0f-2b73047599eb","timestamp":"2021-05-15T16:53:22.692Z","serial":0,"level":"LOG","msg":"Browser error: write EPIPE"}
{"id":"f2b60b7b-ec5d-4324-b9b8-cde581ec18e8","timestamp":"2021-05-15T16:53:22.668Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"b943fc93-d233-46f0-9892-9258c9251985","timestamp":"2021-05-15T16:53:22.669Z","serial":0,"level":"LOG","msg":"websocket error { Error: write EPIPE\n    at afterWriteDispatched (internal/stream_base_commons.js:78:25)\n    at writeGeneric (internal/stream_base_commons.js:73:3)\n    at Socket._writeGeneric (net.js:714:5)\n    at Socket._write (net.js:726:8)\n    at doWrite (_stream_writable.js:415:12)\n    at writeOrBuffer (_stream_writable.js:399:5)\n    at Socket.Writable.write (_stream_writable.js:299:11)\n    at Sender.sendFrame (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/Sender.js:390:20)\n    at Sender.send (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/Sender.js:312:12)\n    at WebSocket.send (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/WebSocket.js:377:18)\n    at Browser.send (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/browser.js:66:11)\n    at Brain._connectedBrowser (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/brain.js:985:27)\n    at Browser.<anonymous> (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/brain.js:437:46)\n    at Browser.emit (events.js:198:13)\n    at WebSocketServer.<anonymous> (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/browser.js:39:10)\n    at WebSocketServer.emit (events.js:198:13)\n    at handleUpgrade (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/WebSocketServer.js:87:16)\n    at WebSocketServer.completeUpgrade (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/WebSocketServer.js:288:5)\n    at WebSocketServer.handleUpgrade (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/WebSocketServer.js:227:10)\n    at Server.WebSocketServer._ultron.on (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/ws/lib/WebSocketServer.js:86:14)\n    at Server.emit (events.js:198:13)\n    at onParserExecuteCommon (_http_server.js:571:14)\n    at onParserExecute (_http_server.js:517:3) errno: 'EPIPE', code: 'EPIPE', syscall: 'write' }"}
{"id":"4cd9b881-075e-4ea8-8d07-3300aa4bcddc","timestamp":"2021-05-15T16:53:22.693Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"6098d0f4-893a-4755-9ab4-1c620d682cfe","timestamp":"2021-05-15T17:02:10.333Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  '--devBoard' ]"}
{"id":"a05461bf-aa0f-4923-84ed-c36f95bd56f6","timestamp":"2021-05-15T17:02:10.526Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"6e32c325-c197-4d86-8f41-9979dd08c569","timestamp":"2021-05-15T17:02:10.544Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"56797914-d4d5-4173-b531-8155e47b6526","timestamp":"2021-05-15T17:02:10.559Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"33fcdec4-7936-4fdd-a701-a6d49cfe2604","timestamp":"2021-05-15T17:02:10.526Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"088a56cb-e3fe-4018-97c2-95b38fc4724b","timestamp":"2021-05-15T17:02:10.521Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"af1d8d5f-5c42-49a3-b06e-4ffa733961a9","timestamp":"2021-05-15T17:02:10.342Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79U++CA*8IED.M$BI4EAZFP6U$TBKK9%Q$$9-8%M8S4+L0KXT*F$9VPMS.:SS7',\n  devBoard: true }"}
{"id":"001256e6-f0bf-4f1a-9b90-4e683c110fb8","timestamp":"2021-05-15T17:02:10.565Z","serial":0,"level":"LOG","msg":"new brain state: virgin"}
{"id":"ca86596b-4eea-431f-aeff-350698f2dd46","timestamp":"2021-05-15T17:02:10.565Z","serial":1,"level":"LOG","msg":"browser not connected"}
{"id":"3841b00d-f034-47fe-a794-d2bb20eaa5a1","timestamp":"2021-05-15T17:02:10.566Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"cb2544af-157c-4768-822f-42ec3540735c","timestamp":"2021-05-15T17:02:10.568Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.4 MB, memFree: 20.2%\n  nodeUptime: 0.00h, osUptime: 28.77h"}
{"id":"d12d4f28-d991-4d9e-bc9b-37169171f6fb","timestamp":"2021-05-15T17:02:10.776Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"db536bff-dcf2-4b72-b2da-d59adf477972","timestamp":"2021-05-15T17:03:23.910Z","serial":0,"level":"LOG","msg":"new brain state: initializing"}
{"id":"ae557a4f-1707-489b-947b-f8de67b3609d","timestamp":"2021-05-15T17:03:24.841Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"80a3f937-6d16-4251-9d79-a962e6c05275","timestamp":"2021-05-15T17:03:24.842Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"ad66a45f-8553-4847-bbb7-7516a9468ab3","timestamp":"2021-05-15T17:03:24.844Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"bfd64093-a857-4bc5-88e6-c28cf78f6da1","timestamp":"2021-05-15T17:03:24.845Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"04a535e3-e92a-4dfc-973c-a2235d1bd7b6","timestamp":"2021-05-15T17:03:47.818Z","serial":0,"level":"LOG","msg":"new brain state: pairingScan"}
{"id":"f99e7272-e06b-4174-bd6e-d94419443d0b","timestamp":"2021-05-15T17:03:52.821Z","serial":0,"level":"LOG","msg":"new brain state: pairing"}
{"id":"72927083-8066-4ea9-ac50-c6d57a51e8f2","timestamp":"2021-05-15T17:03:53.001Z","serial":0,"level":"LOG","msg":"{ HTTPError: Response code 403 (Forbidden)\n    at stream.catch.then.data (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/got/index.js:182:13)\n    at process._tickCallback (internal/process/next_tick.js:68:7)\n  name: 'HTTPError',\n  host: 'localhost:3000',\n  hostname: 'localhost',\n  method: 'GET',\n  path:\n   '/ca?token=d6a29001413772075f4c339af4d433c528464529d0329e945ee2cc5fa8306727',\n  protocol: 'https:',\n  url:\n   'https://localhost:3000/ca?token=d6a29001413772075f4c339af4d433c528464529d0329e945ee2cc5fa8306727',\n  statusCode: 403,\n  statusMessage: 'Forbidden',\n  headers:\n   { 'x-dns-prefetch-control': 'off',\n     'x-frame-options': 'SAMEORIGIN',\n     'strict-transport-security': 'max-age=15552000; includeSubDomains',\n     'x-download-options': 'noopen',\n     'x-content-type-options': 'nosniff',\n     'x-xss-protection': '1; mode=block',\n     'surrogate-control': 'no-store',\n     'cache-control': 'no-store, no-cache, must-revalidate, proxy-revalidate',\n     pragma: 'no-cache',\n     expires: '0',\n     'content-type': 'application/json; charset=utf-8',\n     'content-length': '21',\n     etag: 'W/\"15-YxhEIACbJdL+t73q4n5kSAv7LD0\"',\n     vary: 'Accept-Encoding',\n     date: 'Sat, 15 May 2021 17:03:52 GMT',\n     connection: 'close' } }"}
{"id":"22f762c6-5eb7-42a2-a9dc-648a5406006d","timestamp":"2021-05-15T17:03:53.004Z","serial":1,"level":"LOG","msg":"new brain state: pairingError"}
{"id":"0b2ed87b-4492-45e0-a7ed-2991c9d3c82b","timestamp":"2021-05-15T17:03:53.004Z","serial":0,"level":"LOG","msg":"Error: Pairing error - Please make sure you have a stable network connection and that you are using the right QR Code\n    at got.then.catch.err (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/pairing.js:61:12)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"id":"3b76d2be-e034-41f5-8c7b-66728f804914","timestamp":"2021-05-15T17:06:12.372Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  '--devBoard' ]"}
{"id":"3f3647fc-ab1a-4ba7-a59b-aba1f9da6279","timestamp":"2021-05-15T17:06:12.520Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"993865d2-d1dc-4583-9bf9-72f3376701d7","timestamp":"2021-05-15T17:06:12.380Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  devBoard: true }"}
{"id":"10620912-01ff-4a62-b0a4-f52bc5de1676","timestamp":"2021-05-15T17:06:12.526Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"d517747e-f872-41c1-9e94-7ba9403ecbdc","timestamp":"2021-05-15T17:06:12.544Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"714a3584-d42b-443a-ad28-ffb2ee6d2814","timestamp":"2021-05-15T17:06:12.550Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"489b1e1e-522e-4b82-ba56-71b8ec972af0","timestamp":"2021-05-15T17:06:12.525Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"435a5685-733a-460d-89c8-99b04d5781fd","timestamp":"2021-05-15T17:06:12.555Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"e4c963c0-f266-47ab-8fd0-6c54db24d093","timestamp":"2021-05-15T17:06:12.561Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"881d910c-1325-42f1-93a8-4373112b9b16","timestamp":"2021-05-15T17:06:12.565Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"f6a55be9-d040-4dc5-a521-f665acf10833","timestamp":"2021-05-15T17:06:12.576Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"1bbc0495-c275-4922-8504-5f955d3750da","timestamp":"2021-05-15T17:06:12.556Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"eae8b316-e323-4c96-b8d0-e1a12f1bc705","timestamp":"2021-05-15T17:06:12.580Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.2 MB, memFree: 18.8%\n  nodeUptime: 0.00h, osUptime: 28.84h"}
{"id":"cdd4e282-5346-4292-8635-6511deb9fcf5","timestamp":"2021-05-15T17:06:12.573Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"ce2f364e-2275-4ddc-b070-5bac35daf35d","timestamp":"2021-05-15T17:06:13.521Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"73235bdb-c66c-42be-a701-7f17db7f4e89","timestamp":"2021-05-15T17:06:18.886Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"9f95faa3-def7-4c8b-bc31-6dec1036e2d2","timestamp":"2021-05-15T17:06:21.999Z","serial":0,"level":"LOG","msg":"new brain state: pairingScan"}
{"id":"fd9cf845-9a72-4a03-aa08-024cf744cf5d","timestamp":"2021-05-15T17:06:23.102Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"6f7fc632-d3e6-44e8-a187-bbec4829d3f8","timestamp":"2021-05-15T17:06:24.147Z","serial":0,"level":"LOG","msg":"new brain state: pairingScan"}
{"id":"099555e9-778d-4a05-aa60-62ccbf0c6788","timestamp":"2021-05-15T17:06:29.150Z","serial":0,"level":"LOG","msg":"new brain state: pairing"}
{"id":"e041d850-8b24-4b6c-8bb0-173d97db69c4","timestamp":"2021-05-15T18:06:12.557Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 40.7 MB, memFree: 26.4%\n  nodeUptime: 1.00h, osUptime: 29.84h"}
{"id":"25cf6e88-f04a-4b72-8569-da2136fc29f6","timestamp":"2021-05-15T18:32:00.652Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"2d90298a-73a0-48fd-ba91-3acf82f1d3d8","timestamp":"2021-05-15T19:06:12.556Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 41.1 MB, memFree: 20.7%\n  nodeUptime: 2.00h, osUptime: 30.40h"}
{"id":"3c0beb80-648d-43a6-9d6d-c93de3fb49bc","timestamp":"2021-05-15T19:28:49.288Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  '--devBoard' ]"}
{"id":"4de66f1d-c918-4eba-8c93-c670db241529","timestamp":"2021-05-15T19:28:49.296Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  devBoard: true }"}
{"id":"7d9fda1c-a4cf-4cab-a7c2-3c5f668ded4c","timestamp":"2021-05-15T19:28:49.463Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"b6ef1612-6926-4ffe-90b4-ed15d9fdbc29","timestamp":"2021-05-15T19:28:49.480Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"0612247f-7d68-4fc4-a91c-8749df2be57d","timestamp":"2021-05-15T19:28:49.442Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"005575b3-9628-42bc-8558-0abc3e01da6a","timestamp":"2021-05-15T19:28:49.437Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"09476ce4-8332-4a5f-bee3-23b9f9f3e115","timestamp":"2021-05-15T19:28:49.443Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"a85a2a59-ec8a-424c-874c-2db993463f19","timestamp":"2021-05-15T19:28:49.485Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"add29ef3-d611-4d3e-8111-6548499451f3","timestamp":"2021-05-15T19:28:49.486Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"2ed72a94-4557-4f86-b148-ebebb225a1c0","timestamp":"2021-05-15T19:28:49.510Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"3c754172-a6b8-48f9-9f32-98771b6e9daa","timestamp":"2021-05-15T19:28:49.521Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 60.6 MB, memFree: 19.5%\n  nodeUptime: 0.00h, osUptime: 30.77h"}
{"id":"7db55397-ef8c-49cd-a9cb-2dee0b962a98","timestamp":"2021-05-15T19:28:49.498Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"6647768e-908f-4045-bbf6-18ae43574fbd","timestamp":"2021-05-15T19:28:49.493Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"df028368-67e4-423e-99d3-a3c4dc1fafe8","timestamp":"2021-05-15T19:28:49.508Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"7c26ab35-fea4-4342-98f5-f1a00e8a8c92","timestamp":"2021-05-15T19:37:18.347Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"4d8313c9-26c9-44b0-a6bb-1e76aaca4a68","timestamp":"2021-05-15T20:06:12.558Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 41.8 MB, memFree: 18.7%\n  nodeUptime: 3.00h, osUptime: 31.31h"}
{"id":"d654848b-57a9-40a6-90ad-d5be6fe1e651","timestamp":"2021-05-15T20:25:50.889Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"40c14aa6-cc26-40ce-9829-6cf5e0161d53","timestamp":"2021-05-15T20:28:49.491Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 38.5 MB, memFree: 23.1%\n  nodeUptime: 1.00h, osUptime: 31.68h"}
{"id":"b0397115-644b-40b2-855a-fc146bfdf807","timestamp":"2021-05-15T21:06:12.558Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 42.0 MB, memFree: 23.5%\n  nodeUptime: 4.00h, osUptime: 32.24h"}
{"id":"2a02449c-db0a-4159-ae3d-0adc194fb709","timestamp":"2021-05-15T21:39:10.458Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 38.9 MB, memFree: 24.1%\n  nodeUptime: 2.17h, osUptime: 32.37h"}
{"id":"8e60a660-4aeb-4bc3-978e-28182de3b6fa","timestamp":"2021-05-15T21:41:18.116Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  '--devBoard' ]"}
{"id":"2ef472f5-4d68-44ba-8e18-f85b242e7d66","timestamp":"2021-05-15T21:41:18.124Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  devBoard: true }"}
{"id":"55c9b2ff-5d85-4446-9c91-91805ddd26ab","timestamp":"2021-05-15T21:41:18.478Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"750025f8-074b-41dd-a22e-3e6b4c677740","timestamp":"2021-05-15T21:41:18.495Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"3b6a8ed3-2831-42e3-9909-0adb4da6a068","timestamp":"2021-05-15T21:41:18.458Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"d311c0a2-4441-4acd-be78-d76b32c220b2","timestamp":"2021-05-15T21:41:18.458Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"02136f6c-4f39-4df3-ac94-8a493a579b60","timestamp":"2021-05-15T21:41:18.452Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"fab75c52-940f-466b-85ac-3cedc1ad2818","timestamp":"2021-05-15T21:41:18.501Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"6d6c1e4a-e606-447c-84ee-1d8100978ac6","timestamp":"2021-05-15T21:41:18.502Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"f0b45cb4-96f1-4898-9986-5150615b5e68","timestamp":"2021-05-15T21:41:18.512Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"b46ae019-5bb6-4324-9670-528237bf066a","timestamp":"2021-05-15T21:41:18.514Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.3 MB, memFree: 24.5%\n  nodeUptime: 0.00h, osUptime: 32.41h"}
{"id":"83d1ee03-bf3d-4a3a-b97a-80d4e1a50be5","timestamp":"2021-05-15T21:41:18.510Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"b6047d24-d683-4891-a27b-f0c898c5ef35","timestamp":"2021-05-15T21:41:18.508Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"5a0f4982-957f-460a-ba20-0d9767b3d4d1","timestamp":"2021-05-15T21:41:18.511Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"07fa9e4d-617b-4d3b-a24d-1fdc177ff678","timestamp":"2021-05-15T21:41:28.908Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"bdeed092-8cf3-490e-ada0-8241fb29b61d","timestamp":"2021-05-15T21:42:21.342Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  '--devBoard' ]"}
{"id":"71ee7ef8-53e6-462c-a298-321127723f97","timestamp":"2021-05-15T21:42:21.553Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"b2fe73be-3582-4587-b092-68478b4fcf2e","timestamp":"2021-05-15T21:42:21.351Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  devBoard: true }"}
{"id":"216e1fad-bcc6-4e21-a4c0-09a73011e5e7","timestamp":"2021-05-15T21:42:21.595Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"5cdfbadb-fe9b-44a3-b66e-2b05173ffc60","timestamp":"2021-05-15T21:42:21.552Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"c5cc93a0-e253-479f-a8ca-e91b584e9068","timestamp":"2021-05-15T21:42:21.547Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"77bff5bc-cfdb-491c-a653-62f9064b4346","timestamp":"2021-05-15T21:42:21.573Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"01cb2d00-dcad-4e06-b237-7d158e3fae9d","timestamp":"2021-05-15T21:42:21.601Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"b66daf6f-f7f1-44f3-87a2-5039b7d5a4c5","timestamp":"2021-05-15T21:42:21.602Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"74f22c6d-30f3-462b-8f28-52915e699457","timestamp":"2021-05-15T21:42:21.629Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"a2ef14ca-485d-4cd0-9f5a-e87b3e51e0c8","timestamp":"2021-05-15T21:42:21.617Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"2eb88aee-ab5a-4918-86db-fdfee07dc7b5","timestamp":"2021-05-15T21:42:21.625Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"1ade5beb-1a87-4813-9cc3-84bbdc17305d","timestamp":"2021-05-15T21:42:21.639Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.2 MB, memFree: 23.9%\n  nodeUptime: 0.00h, osUptime: 32.42h"}
{"id":"47f72b19-96c0-4f89-b917-9d400a09be58","timestamp":"2021-05-15T21:42:21.613Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"4ba74ada-1595-480e-aa65-cb85e5e962a3","timestamp":"2021-05-15T21:43:54.054Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  '--devBoard' ]"}
{"id":"d7dcb779-6dae-48fa-b54b-48dbd57d95a8","timestamp":"2021-05-15T21:43:54.062Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  devBoard: true }"}
{"id":"fc826ab0-bb78-456b-8d31-e5c4fc05bc60","timestamp":"2021-05-15T21:43:54.213Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"cf94d3ce-d296-4c38-890f-0a777324023a","timestamp":"2021-05-15T21:43:54.234Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"38994272-d4f9-44a1-9a11-c1a91109ea0b","timestamp":"2021-05-15T21:43:54.193Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"6e6e0e68-2e13-44c8-a8dc-3fb68a9a7312","timestamp":"2021-05-15T21:43:54.187Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"98c8dabd-5dbf-4bf6-80e1-334202abdb2a","timestamp":"2021-05-15T21:43:54.193Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"253cfaa9-0a99-4b52-91df-32f6c61b56ca","timestamp":"2021-05-15T21:43:54.240Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"4a918be4-51c0-406d-a595-e05f72b72155","timestamp":"2021-05-15T21:43:54.260Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"dbe43d6f-3a66-4b58-9c8d-615cab74d8da","timestamp":"2021-05-15T21:43:54.242Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"6548e049-979f-4c7d-aeff-583fc1348512","timestamp":"2021-05-15T21:43:54.254Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"7108d163-09f8-44d4-9c95-86d570b29362","timestamp":"2021-05-15T21:43:54.241Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"b8298065-319d-436b-83e7-d1a1ba923633","timestamp":"2021-05-15T21:43:54.263Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"307ec91a-cca6-4477-b9cc-586aa04479d4","timestamp":"2021-05-15T21:43:54.267Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.4 MB, memFree: 24.3%\n  nodeUptime: 0.00h, osUptime: 32.45h"}
{"id":"742f6957-9eef-42e9-b56f-b2eedb20a926","timestamp":"2021-05-15T21:44:01.956Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"d2b150a7-2941-4488-aa61-030967c6a852","timestamp":"2021-05-15T21:45:00.175Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  '--devBoard' ]"}
{"id":"4f71d2c9-0db6-47a2-bc07-120569bb9803","timestamp":"2021-05-15T21:45:00.489Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"e33d0a94-4a46-43e7-88ad-e582629a6a0b","timestamp":"2021-05-15T21:45:00.183Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  devBoard: true }"}
{"id":"297a8200-c26a-43c1-bc7a-2e9327f427e5","timestamp":"2021-05-15T21:45:00.495Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"2a6ae7eb-e271-49cf-a7f6-edef22c6a205","timestamp":"2021-05-15T21:45:00.495Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"f51ed949-9d95-4d02-ab9c-3e2e60618b8c","timestamp":"2021-05-15T21:45:00.516Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"f7013e86-926a-4418-b6db-c51a5318fa7f","timestamp":"2021-05-15T21:45:00.536Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"e3449f7a-3135-48b9-8206-a3f6eb73b5cb","timestamp":"2021-05-15T21:45:00.542Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"ca240ae3-702b-48e8-a686-93e6b2f4e95c","timestamp":"2021-05-15T21:45:00.543Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"e3b4fba1-96ca-45c7-aee0-e7ca99efd7ca","timestamp":"2021-05-15T21:45:00.545Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"fd98d7ff-9ef6-4005-8df6-e91b95806863","timestamp":"2021-05-15T21:45:00.553Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"6bf2073c-823a-40a3-a103-23aee6f8d659","timestamp":"2021-05-15T21:45:00.548Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"0d5f9766-9554-4e8a-9b90-6d0578854fa7","timestamp":"2021-05-15T21:45:00.564Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.4 MB, memFree: 22.4%\n  nodeUptime: 0.00h, osUptime: 32.47h"}
{"id":"740861c4-58d1-405b-8628-ec8640ccfb18","timestamp":"2021-05-15T21:45:00.547Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"a2242f65-c940-4493-8dd6-c9560fc93ec1","timestamp":"2021-05-15T21:45:21.778Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"9028c057-d65e-4230-9099-cc330ad3ed1e","timestamp":"2021-05-15T21:45:51.962Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"af8f1dc3-1018-4a8b-9b1d-4ef6c47bb4b0","timestamp":"2021-05-15T21:46:08.635Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  '--devBoard' ]"}
{"id":"835308da-2f19-458f-819b-e1b7decea633","timestamp":"2021-05-15T21:46:08.807Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"6f45c4bb-de08-422a-b173-e317f471c4f8","timestamp":"2021-05-15T21:46:08.643Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%',\n  devBoard: true }"}
{"id":"c73bb3ff-827f-47b6-86f8-884b03b31b09","timestamp":"2021-05-15T21:46:08.834Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"f02c6f1e-4257-48af-b6e6-044f30c5d6cc","timestamp":"2021-05-15T21:46:08.814Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"9d6166b3-329a-4f76-bd70-e92f09d2d039","timestamp":"2021-05-15T21:46:08.853Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"a2a89358-8587-48da-8b66-09f361f958eb","timestamp":"2021-05-15T21:46:08.814Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"14f55fc8-3447-42d6-ba32-8623adcfddf4","timestamp":"2021-05-15T21:46:08.858Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"c6d83c3f-0316-4d90-a6b9-9b4ee2fa3d63","timestamp":"2021-05-15T21:46:08.873Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"e9c6ae62-b4e7-4ddc-9ae5-ad44d26ad66c","timestamp":"2021-05-15T21:46:08.875Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"839e22f1-0d6f-4504-985b-a0e6f50888d9","timestamp":"2021-05-15T21:46:08.889Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.2 MB, memFree: 23.6%\n  nodeUptime: 0.00h, osUptime: 32.49h"}
{"id":"86d718c6-762b-4b28-9a74-a60c8fd8a53f","timestamp":"2021-05-15T21:46:08.866Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"a42995e8-7b45-4f55-b464-9233acbe795b","timestamp":"2021-05-15T21:46:08.864Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"e32e91a0-a803-4afc-8a28-cc8dacb8ebfb","timestamp":"2021-05-15T21:46:08.859Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"db533536-d6b4-453a-ae3d-f76dbcc0be51","timestamp":"2021-05-15T21:46:08.962Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"7a818767-cae9-4d20-93b0-81f4eb2ccee0","timestamp":"2021-05-15T21:46:13.722Z","serial":0,"level":"LOG","msg":"new brain state: pairingScan"}
{"id":"3827a256-d10a-486e-b4db-5f4320728b9b","timestamp":"2021-05-15T21:46:18.727Z","serial":0,"level":"LOG","msg":"Scanning totem"}
{"id":"e86151d6-b05e-41c9-b3d3-3964a43a76dc","timestamp":"2021-05-15T21:46:18.728Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%"}
{"id":"fb742df0-835c-4b29-be9e-26cd98556a1c","timestamp":"2021-05-15T21:46:18.731Z","serial":0,"level":"LOG","msg":"WTF"}
{"id":"ab94e375-3d61-4cb4-8919-7462af0efebd","timestamp":"2021-05-15T21:46:18.732Z","serial":0,"level":"LOG","msg":"new brain state: pairing"}
{"id":"59f171f2-fc9f-4ed3-895f-9191311acdb8","timestamp":"2021-05-15T21:46:18.735Z","serial":0,"level":"LOG","msg":"Linux"}
{"id":"81bdabb1-4ed3-4330-816e-34e29e0a01be","timestamp":"2021-05-15T21:46:18.735Z","serial":1,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79QTKNNLV8.PA02S/:06-P76B$PGSHWM16R/DLYAXJ6/RI8TG:3:UHBKHY33F%"}
{"id":"e81f1269-1d96-418d-bb12-4baa07379564","timestamp":"2021-05-15T21:48:32.300Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  '--devBoard' ]"}
{"id":"f497bf23-6b55-4edb-8cf0-2611005e439a","timestamp":"2021-05-15T21:48:32.313Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  devBoard: true }"}
{"id":"c3168834-bed6-4ce9-896f-67276482ef9e","timestamp":"2021-05-15T21:48:32.616Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"859ff61f-0e59-486d-80de-4350e6173c0d","timestamp":"2021-05-15T21:48:32.674Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"0228a345-45e7-4e42-9802-e94487794208","timestamp":"2021-05-15T21:48:32.622Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"66daf779-452e-4135-8cc9-87b22ab00cb1","timestamp":"2021-05-15T21:48:32.649Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"f7f01d50-e1df-4394-9100-fe821f1e6057","timestamp":"2021-05-15T21:48:32.621Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"3890af1a-7e2d-4a94-a0ed-20fb73cdd12e","timestamp":"2021-05-15T21:48:32.683Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"4c713cdc-22ae-46ed-8ce6-9025bc8c915f","timestamp":"2021-05-15T21:48:32.693Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"752d0206-cc21-4323-9b51-3eebec1ec998","timestamp":"2021-05-15T21:48:32.690Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"3fb1b4c3-e81e-4dfd-b50b-c5ee18f5cdce","timestamp":"2021-05-15T21:48:32.684Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"1ae32b94-55c8-4789-8ab4-3872d1955049","timestamp":"2021-05-15T21:48:32.694Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"f2872568-fe18-4b17-afbe-1d20a4f293ab","timestamp":"2021-05-15T21:48:32.698Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"3831fd89-9d1b-447b-adc7-2377b4840415","timestamp":"2021-05-15T21:48:32.709Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.0 MB, memFree: 20.8%\n  nodeUptime: 0.00h, osUptime: 32.53h"}
{"id":"6383c08c-cf89-48ae-990a-35ffc5869240","timestamp":"2021-05-15T21:48:32.975Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"557667ec-4c21-4959-9663-7144c6adfe41","timestamp":"2021-05-15T21:48:41.126Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"688a68e8-e199-4df8-9b6b-540b2e1c4177","timestamp":"2021-05-15T21:48:50.036Z","serial":0,"level":"LOG","msg":"new brain state: pairingScan"}
{"id":"3883de98-f180-4c23-8562-15a6a8792038","timestamp":"2021-05-15T21:48:55.041Z","serial":0,"level":"LOG","msg":"Scanning totem"}
{"id":"882c50b9-6ba2-48da-abb8-549ec60cd01a","timestamp":"2021-05-15T21:48:55.045Z","serial":0,"level":"LOG","msg":"WTF"}
{"id":"08d6d28a-832c-4f29-8b11-dcd4c9940cba","timestamp":"2021-05-15T21:48:55.043Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS"}
{"id":"34dbc8a2-fbe6-4cf2-89c7-d2d0d0d9aef3","timestamp":"2021-05-15T21:48:55.047Z","serial":0,"level":"LOG","msg":"new brain state: pairing"}
{"id":"9eaeb74e-a75a-459d-a323-4cb88f4ff24f","timestamp":"2021-05-15T21:48:55.051Z","serial":0,"level":"LOG","msg":"Linux"}
{"id":"cf4a546f-1c40-42a5-bc40-3fc8ed625e27","timestamp":"2021-05-15T21:48:55.052Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS"}
{"id":"23864ebf-373e-4fb6-99b8-99a4919fd3c0","timestamp":"2021-05-15T21:50:59.352Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  '--devBoard' ]"}
{"id":"a89e33de-cfdf-418b-b73e-5f6e76af20f8","timestamp":"2021-05-15T21:50:59.514Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"343d25a6-cdcb-4c3c-9b92-be6791e8dbcc","timestamp":"2021-05-15T21:50:59.536Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"8adb034b-1014-49c2-be85-d66f091ccd12","timestamp":"2021-05-15T21:50:59.509Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"cff6c6fc-e3a7-4644-9bfe-4904d1541acb","timestamp":"2021-05-15T21:50:59.515Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"efa12129-b670-4d62-8b0a-421fd9ca9100","timestamp":"2021-05-15T21:50:59.555Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"814ab626-aaf8-4b9c-8a86-5b668ad1b6e0","timestamp":"2021-05-15T21:50:59.362Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  devBoard: true }"}
{"id":"9dd7a052-d5e1-453d-98e3-c05fb49f3c9f","timestamp":"2021-05-15T21:50:59.562Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"d459d38f-d9b1-4bdf-be13-d06b0a38134b","timestamp":"2021-05-15T21:50:59.578Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"d452debc-9bbb-4376-9302-06b30f95267c","timestamp":"2021-05-15T21:50:59.563Z","serial":1,"level":"LOG","msg":"DEBUG1"}
{"id":"1d33c889-979e-4aad-a8c6-38fe6183dc47","timestamp":"2021-05-15T21:50:59.597Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.0 MB, memFree: 22.1%\n  nodeUptime: 0.00h, osUptime: 32.57h"}
{"id":"3b601080-508c-4dcd-80c5-fd6083a0c9b4","timestamp":"2021-05-15T21:50:59.563Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"5e71784b-939c-478a-8b37-8504c73f9bf1","timestamp":"2021-05-15T21:50:59.588Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"3d10aefb-c0be-446a-84fc-8d241b355155","timestamp":"2021-05-15T21:50:59.585Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"a49c2126-d6d4-4ab3-a7e2-2f32fd18c8a5","timestamp":"2021-05-15T21:50:59.996Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"0ffdc8ff-478f-4e68-9e57-94fa8454c7a1","timestamp":"2021-05-15T21:51:03.236Z","serial":0,"level":"LOG","msg":"new brain state: pairingScan"}
{"id":"8d051aae-d657-4de7-af89-801ff709a292","timestamp":"2021-05-15T21:51:08.241Z","serial":0,"level":"LOG","msg":"Scanning totem"}
{"id":"b0aa0658-8c68-4294-968e-48dcc86579fa","timestamp":"2021-05-15T21:51:08.274Z","serial":0,"level":"LOG","msg":"Linux"}
{"id":"1c40a7bf-b40a-4030-9f85-49419699e4c7","timestamp":"2021-05-15T21:51:08.259Z","serial":0,"level":"LOG","msg":"WTF"}
{"id":"1692e4a9-df0d-4efb-ba6d-e64b6a274ae8","timestamp":"2021-05-15T21:51:08.272Z","serial":0,"level":"LOG","msg":"new brain state: pairing"}
{"id":"b79850c2-ba72-4455-89af-e1d655f8c903","timestamp":"2021-05-15T21:51:08.245Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS"}
{"id":"5c0a9672-9ade-435d-90c6-b0ee6913708f","timestamp":"2021-05-15T21:51:08.291Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS"}
{"id":"ece8a790-6c03-44f5-ad08-b0d97f65dc84","timestamp":"2021-05-15T21:51:51.295Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  '--devBoard' ]"}
{"id":"7f9bf4a9-d409-4845-9d96-934532a4df34","timestamp":"2021-05-15T21:51:51.303Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  devBoard: true }"}
{"id":"c0d8938c-352a-4505-b758-5bb369efed46","timestamp":"2021-05-15T21:51:51.432Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"88fd5a8b-aae7-4188-8b06-92e379174018","timestamp":"2021-05-15T21:51:51.437Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"baa3bca2-8397-46d8-a1cd-a2c340c700b9","timestamp":"2021-05-15T21:51:51.438Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"0ecd9223-f7ff-49ae-8887-738ff879a50a","timestamp":"2021-05-15T21:51:51.458Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"7b867e41-9650-47eb-a4df-f91fb1d38f5b","timestamp":"2021-05-15T21:51:51.474Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"8ccfc03d-fda7-4d69-b290-6ae1370f3f02","timestamp":"2021-05-15T21:51:51.480Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"929c0cbc-68be-4d1b-8d2c-d70890a55307","timestamp":"2021-05-15T21:51:51.482Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"0d688ab2-7a13-4a38-98de-89e2de07732e","timestamp":"2021-05-15T21:51:51.484Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"34d261d1-38af-4841-8a20-99ca6c0cff58","timestamp":"2021-05-15T21:51:51.498Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"5829755e-ac49-48a7-bf72-d7aeaf2719eb","timestamp":"2021-05-15T21:51:51.501Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"4bf5969d-1bef-4d8b-9691-4b9194a9eff3","timestamp":"2021-05-15T21:51:51.503Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"0dcfea2b-cde8-4fa3-ad56-87d358ecdb4e","timestamp":"2021-05-15T21:51:51.517Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.3 MB, memFree: 22.3%\n  nodeUptime: 0.00h, osUptime: 32.58h"}
{"id":"b8b02d04-9005-4c3d-8637-912e2ddc2681","timestamp":"2021-05-15T21:51:51.979Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"054b3769-c6bc-4200-bc23-e45a0c465692","timestamp":"2021-05-15T21:51:53.573Z","serial":0,"level":"LOG","msg":"new brain state: pairingScan"}
{"id":"e4e2b882-61c7-4479-a228-1d0de789b315","timestamp":"2021-05-15T21:51:58.576Z","serial":0,"level":"LOG","msg":"Scanning totem"}
{"id":"fb9a36f9-f05c-4415-b727-211f0d3c0153","timestamp":"2021-05-15T21:51:58.578Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS"}
{"id":"9b3a4528-6dda-4878-9e8d-264ce4929ca3","timestamp":"2021-05-15T21:51:58.581Z","serial":0,"level":"LOG","msg":"WTF"}
{"id":"94e808d7-b703-4f5e-bdb0-444bac2eef97","timestamp":"2021-05-15T21:51:58.582Z","serial":0,"level":"LOG","msg":"new brain state: pairing"}
{"id":"40dbb2e6-1c2e-4cd6-8343-bacdb0ecebaf","timestamp":"2021-05-15T21:51:58.584Z","serial":0,"level":"LOG","msg":"Linux"}
{"id":"25230ad9-7724-48e5-a7cf-942a0959f5eb","timestamp":"2021-05-15T21:51:58.585Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS"}
{"id":"4ffed855-57af-4fbd-86c5-ab884ca64527","timestamp":"2021-05-15T21:51:58.586Z","serial":0,"level":"LOG","msg":"In Pair"}
{"id":"bc2ff287-ecdc-4c58-a323-69cf554ffd8f","timestamp":"2021-05-15T21:52:23.042Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  '--devBoard' ]"}
{"id":"6dbdc9e2-16d8-4f69-a2a8-293a218e86eb","timestamp":"2021-05-15T21:52:23.059Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  devBoard: true }"}
{"id":"891620ae-2332-4caa-93a5-9d3dc15e19ad","timestamp":"2021-05-15T21:52:23.516Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"12646e7c-3151-4916-9bca-4551883ac677","timestamp":"2021-05-15T21:52:23.521Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"a89d245c-8c94-4681-af41-af0fc78e7bba","timestamp":"2021-05-15T21:52:23.522Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"3bdc420b-946b-4b73-bda9-4c64216b40a3","timestamp":"2021-05-15T21:52:23.544Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"c3de06b2-2beb-4b88-89bd-6af0b0546908","timestamp":"2021-05-15T21:52:23.566Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"db7ec641-f668-4b47-beb9-da4a0d47bc1c","timestamp":"2021-05-15T21:52:23.572Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"1884cb87-35e6-4cdc-a96d-a9179bde7b80","timestamp":"2021-05-15T21:52:23.574Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"e76acda3-9f58-41dc-994b-f2b9feef7312","timestamp":"2021-05-15T21:52:23.574Z","serial":1,"level":"LOG","msg":"DEBUG1"}
{"id":"f16e7322-e7ef-47d0-88ad-8d71a3a39448","timestamp":"2021-05-15T21:52:23.581Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.2 MB, memFree: 22.9%\n  nodeUptime: 0.00h, osUptime: 32.59h"}
{"id":"4f487a20-d36a-499c-94df-2fd0f087cd9d","timestamp":"2021-05-15T21:52:23.578Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"04fa59b2-aa6d-4c63-8a1c-1eb466a529f4","timestamp":"2021-05-15T21:52:23.579Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"e36860a4-3c38-4f7d-adb3-87e6e906a90e","timestamp":"2021-05-15T21:52:23.577Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"cd83846a-c536-4d9e-ad70-006f219d8410","timestamp":"2021-05-15T21:52:23.995Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"d3c43134-565b-4c97-bcfd-1c80b6fab007","timestamp":"2021-05-15T21:52:25.343Z","serial":0,"level":"LOG","msg":"new brain state: pairingScan"}
{"id":"683c1800-0247-4a53-a14b-ce57a0903115","timestamp":"2021-05-15T21:52:30.346Z","serial":0,"level":"LOG","msg":"Scanning totem"}
{"id":"75b97140-80c7-459a-a235-b1e881dbe04d","timestamp":"2021-05-15T21:52:30.353Z","serial":0,"level":"LOG","msg":"new brain state: pairing"}
{"id":"642e8150-e581-475c-9c2e-5f61c837cb9b","timestamp":"2021-05-15T21:52:30.357Z","serial":0,"level":"LOG","msg":"Linux"}
{"id":"168fa819-9e52-4c6b-8aa0-2d9bb1d61711","timestamp":"2021-05-15T21:52:30.358Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS"}
{"id":"c1f38e4f-2afd-4e52-ba48-00dd99f0e587","timestamp":"2021-05-15T21:52:30.352Z","serial":0,"level":"LOG","msg":"WTF"}
{"id":"1a965ebb-a4b7-45e1-99d1-2f354517b092","timestamp":"2021-05-15T21:52:30.348Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS"}
{"id":"978c38eb-16d5-4d59-8de7-e20021eb9a4c","timestamp":"2021-05-15T21:52:30.361Z","serial":0,"level":"LOG","msg":"In Pair"}
{"id":"6b09acb2-41ec-4ec9-88c8-8748e90adad3","timestamp":"2021-05-15T21:52:30.374Z","serial":0,"level":"LOG","msg":"In Pair - 2"}
{"id":"53b4ad1f-7382-40bb-ab4a-77e976e60c01","timestamp":"2021-05-15T21:53:44.693Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  '--devBoard' ]"}
{"id":"628319c7-38fd-4c67-b61d-3fceab8a0095","timestamp":"2021-05-15T21:53:45.180Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"fcb8855b-b3fb-41ed-9b85-6ec7621a1c3c","timestamp":"2021-05-15T21:53:45.181Z","serial":0,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"4978b6fc-8e01-4339-bfd8-051d8bd4d40d","timestamp":"2021-05-15T21:53:45.175Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"b54cc8d8-8260-44c1-aa00-70a07442f8a1","timestamp":"2021-05-15T21:53:45.201Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"ad985b00-1436-4e56-b9ad-8186cb005f4c","timestamp":"2021-05-15T21:53:45.207Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"1d66988c-0303-4263-ae13-b17fe8240149","timestamp":"2021-05-15T21:53:44.706Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  devBoard: true }"}
{"id":"eac3a92f-cc0e-46d9-a205-32f2564ae57d","timestamp":"2021-05-15T21:53:45.213Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"8ba03597-c16a-40df-9c6f-7bb3d9a35416","timestamp":"2021-05-15T21:53:45.213Z","serial":1,"level":"LOG","msg":"browser not connected"}
{"id":"503c2b43-93f6-4489-857c-2f73136074e5","timestamp":"2021-05-15T21:53:45.220Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"2819668a-38e0-46e1-b04d-e24a6acdb052","timestamp":"2021-05-15T21:53:45.237Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"4312c7bf-3086-4fdf-a973-1c548f80428c","timestamp":"2021-05-15T21:53:45.222Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"80d8307c-c4d3-4439-a5b7-544d3496c26a","timestamp":"2021-05-15T21:53:45.247Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.4 MB, memFree: 21.1%\n  nodeUptime: 0.00h, osUptime: 32.61h"}
{"id":"cbbdc0f4-a8ee-45c3-9361-8eb57ebc500d","timestamp":"2021-05-15T21:53:45.235Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"02b3fc0f-6b8a-4be2-8bca-b0db4e0937c0","timestamp":"2021-05-15T21:53:46.002Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"e33de9da-775b-4620-b7d7-0443a0e54496","timestamp":"2021-05-15T21:53:48.701Z","serial":0,"level":"LOG","msg":"new brain state: pairingScan"}
{"id":"ece0d78f-ea4b-4230-af3f-c25cba23924c","timestamp":"2021-05-15T21:53:53.705Z","serial":0,"level":"LOG","msg":"Scanning totem"}
{"id":"3225c428-5e4a-488f-bf67-dee1b339398f","timestamp":"2021-05-15T21:53:53.710Z","serial":0,"level":"LOG","msg":"WTF"}
{"id":"0438c00a-d15e-4143-a1f8-32fe3cc057b5","timestamp":"2021-05-15T21:53:53.707Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS"}
{"id":"dcf7f289-3a29-4d53-813e-749f25d13cfa","timestamp":"2021-05-15T21:53:53.717Z","serial":0,"level":"LOG","msg":"new brain state: pairing"}
{"id":"b2215ffc-f454-4da2-bd8e-74f47c4311af","timestamp":"2021-05-15T21:53:53.766Z","serial":0,"level":"LOG","msg":"In Pair - 2"}
{"id":"212b0924-513d-4369-8c6c-5917bda12989","timestamp":"2021-05-15T21:53:53.722Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS"}
{"id":"e6839a3a-e47f-4bf4-83a8-81c4a767d0f5","timestamp":"2021-05-15T21:53:53.739Z","serial":0,"level":"LOG","msg":"In Pair"}
{"id":"aa774bd9-286d-46f4-b70c-3b56eb3ae527","timestamp":"2021-05-15T21:53:53.721Z","serial":0,"level":"LOG","msg":"Linux"}
{"id":"160da3df-b6c9-43df-a3b3-aa826a71c30e","timestamp":"2021-05-15T21:53:53.780Z","serial":0,"level":"LOG","msg":"https://localhost:3000/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399"}
{"id":"d53b1d39-9963-43c8-be4a-337ee78116cf","timestamp":"2021-05-15T22:01:58.166Z","serial":0,"level":"LOG","msg":"PassThrough {\n  _readableState:\n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: false,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     paused: false,\n     emitClose: true,\n     autoDestroy: false,\n     destroyed: false,\n     defaultEncoding: 'utf8',\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  _events:\n   [Object: null prototype] {\n     prefinish: [Function: prefinish],\n     error:\n      { [Function: bound onceWrapper] listener: [Function: error] } },\n  _eventsCount: 2,\n  _maxListeners: undefined,\n  _writableState:\n   WritableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     finalCalled: false,\n     needDrain: false,\n     ending: true,\n     ended: true,\n     finished: true,\n     destroyed: false,\n     decodeStrings: true,\n     defaultEncoding: 'utf8',\n     length: 0,\n     writing: false,\n     corked: 0,\n     sync: false,\n     bufferProcessing: false,\n     onwrite: [Function: bound onwrite],\n     writecb: null,\n     writelen: 0,\n     bufferedRequest: null,\n     lastBufferedRequest: null,\n     pendingcb: 0,\n     prefinished: true,\n     errorEmitted: false,\n     emitClose: true,\n     autoDestroy: false,\n     bufferedRequestCount: 0,\n     corkedRequestsFree:\n      { next: null,\n        entry: null,\n        finish: [Function: bound onCorkedFinish] } },\n  writable: false,\n  allowHalfOpen: true,\n  _transformState:\n   { afterTransform: [Function: bound afterTransform],\n     needTransform: false,\n     transforming: false,\n     writecb: null,\n     writechunk: null,\n     writeencoding: 'buffer' },\n  socket:\n   TLSSocket {\n     _tlsOptions:\n      { pipe: false,\n        secureContext: [SecureContext],\n        isServer: false,\n        requestCert: true,\n        rejectUnauthorized: false,\n        session: undefined,\n        ALPNProtocols: undefined,\n        requestOCSP: undefined },\n     _secureEstablished: true,\n     _securePending: false,\n     _newSessionPending: false,\n     _controlReleased: true,\n     _SNICallback: null,\n     servername: 'localhost',\n     alpnProtocol: false,\n     authorized: false,\n     authorizationError: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n     encrypted: true,\n     _events:\n      [Object: null prototype] {\n        close: [Array],\n        end: [Function: onReadableStreamEnd],\n        newListener: [Function: keylogNewListener],\n        secure: [Function: onConnectSecure],\n        free: [Function: onFree],\n        agentRemove: [Function: onRemove],\n        drain: [Function: ondrain],\n        error: [Function: socketErrorListener] },\n     _eventsCount: 8,\n     connecting: false,\n     _hadError: false,\n     _handle: null,\n     _parent: null,\n     _host: 'localhost',\n     _readableState:\n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: true,\n        endEmitted: true,\n        reading: false,\n        sync: false,\n        needReadable: false,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: false,\n        autoDestroy: false,\n        destroyed: true,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: false,\n     _maxListeners: undefined,\n     _writableState:\n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: true,\n        needDrain: false,\n        ending: true,\n        ended: true,\n        finished: true,\n        destroyed: true,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: true,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: false,\n     allowHalfOpen: false,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: undefined,\n     _server: null,\n     ssl: null,\n     _requestCert: true,\n     _rejectUnauthorized: false,\n     parser: null,\n     _httpMessage:\n      ClientRequest {\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: false,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        socket: [Circular],\n        connection: [Circular],\n        _header:\n         'GET /ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399 HTTP/1.1\\r\\nuser-agent: got/7.1.0 (https://github.com/sindresorhus/got)\\r\\naccept-encoding: gzip,deflate\\r\\naccept: application/json\\r\\nHost: localhost:3000\\r\\nConnection: close\\r\\n\\r\\n',\n        _onPendingData: [Function: noopPendingOutput],\n        agent: [Agent],\n        socketPath: undefined,\n        timeout: undefined,\n        method: 'GET',\n        insecureHTTPParser: undefined,\n        path:\n         '/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n        _ended: true,\n        res: [IncomingMessage],\n        aborted: undefined,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     write: [Function: writeAfterFIN],\n     [Symbol(res)]: null,\n     [Symbol(asyncId)]: 140,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(timeout)]: null,\n     [Symbol(kBytesRead)]: 2124,\n     [Symbol(kBytesWritten)]: 250,\n     [Symbol(connect-options)]:\n      { rejectUnauthorized: false,\n        ciphers:\n         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n        checkServerIdentity: [Function: checkServerIdentity],\n        minDHSize: 1024,\n        encoding: null,\n        _agentKey:\n         'localhost:3000:::-----BEGIN CERTIFICATE-----\\r\\nMIIEeTCCAmGgAwIBAgIBATANBgkqhkiG9w0BAQsFADAAMB4XDTIxMDUxNTE3MDMy\\r\\nNFoXDTIxMDUxNTE3MDMyNFowADCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC\\r\\nggIBALZ51wKd3R6/hc0Gh8PnrHtzMJcxGy4dhq3l18wqKAEZ4KlwgrshsFwSxFe3\\r\\nymhSME9a+96uQ+vVKZ8IaxHNgne6jwT4+i+YRMURfqFeNwNPRGRmvvFw6dFVKSD2\\r\\nMVN6PD5FcFazDPyaViGRaRfuQ1Ftbb/ITwRiRVG1TtUztvro9kzYe6SRvcsKkUVF\\r\\nk4NJAZjx+JVoNjgZYtdZ0PnPpV9/2OgxaJfY0ZsBNx7jvqVbu972Q3+D0rot1SBk\\r\\num71wprpMzLSN+QdW3NR517sEYPLE3kb21D6lQmTABfNxqq1MgouopG97MEGlAqH\\r\\nTi5Uw2r4tsWZingUazTVf3fg5xDiZSE0RQgq9JN79miIlwrxJZsaR2bJdcWe6xlA\\r\\n4+d7kxWJkL9MyIoXy6w4OfCMAz+xUJtngmSTFr9tZO31OYWoVhHXBx9s5pg29u3p\\r\\n7is5UcS4drjD1q9b+LZ92YKwnP177CbfPXhwjUL/HuknymxSKsSQBhcYjtB028Zj\\r\\nhiyyAJqZ7XFC+HRvhNXjB8Xzyy912M53/oSKQjDTMAhrFXi0nzbCe4BOmRL8LQrR\\r\\n20vF1hIBXoIYYBAXJnRLdS2vd3wZdjkLNaE7cgRVQCnaDWEQqIdaonv5OY0AX7WL\\r\\ngh+E+YFThCX4UQFpHlQk+ksWm7DBl3Tni7M8X8t6j0Ra8qh5AgMBAAEwDQYJKoZI\\r\\nhvcNAQELBQADggIBAGLGIDeJ6AzqR08eQ5UyOzI5HBVmqjxu1hkXUdYNrSNwPjcs\\r\\nnItzhZ4TCDa/3VR7YnDDgsUUSA2OKmGKOlFFhiYc4zDH95VbbQCHY+0qpT1c7bxc\\r\\nQVXZd1KJLTZKaVENBc3ZSxnFkI9lbhZ7ghy63BbeMc6lxknI+/HgBDs6DYvFFKbN\\r\\nJZA4B2VmwSbia/IshR3szJCvW6zz4Ny5Kv5ABJ2jF2mZLifb8+USx7skBpvw1MnB\\r\\nytnUbk8IImEOtsOPkA+J2OiBpLFjg3R5D+Z+FX3NTXsjKdJZXhPksEkF9afuI81M\\r\\nEN7XCdu+m/TOas4tJN9iR/uEvKt9X9X/rFK8M7EmKRT0L5vFj//3U5bGvACCQfiZ\\r\\n9n680kKoVkYgI2PrMDCnBFZkTVX6K4sSlwha+BqczUu50XAJ6sP3jS++NMLRYnuB\\r\\nKd/E55fUyheT7JsOniwSQ62jItEGuZ6G6PvudyFUCN9D2dUxTfCKsfbcfjjlT9gi\\r\\nX1F++CgNWmsuSS3ytuZhrBFDBl3pgNq9cC0zdVpCI6IZgLweudqFoRHmDt+clOGG\\r\\niE1Kowm2ja3VMjAj8SJCLnHQKMPdbjlnQc3bZAnovD6noKogaAQcLO4sBcedELjU\\r\\nacx0/3BnDnxP2X48jd2/g+DJTQ8onh4wu4DW7TKsqGg2BOmFPwQX1+6wR866\\r\\n-----END CERTIFICATE-----\\r\\n:::-----BEGIN RSA PRIVATE KEY-----\\r\\n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\\r\\n-----END RSA PRIVATE KEY-----\\r\\n::false::::::::::',\n        followRedirect: true,\n        method: 'GET',\n        headers: [Object],\n        cert:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 45 65 54 43 43 41 6d 47 67 41 77 49 42 41 67 49 42 41 ... >,\n        key:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 4b 51 49 42 41 41 4b 43 41 67 45 41 74 ... >,\n        json: true,\n        href:\n         'https://localhost:3000/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n        pathname: '/ca',\n        search:\n         '?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n        hash: null,\n        hostname: 'localhost',\n        port: '3000',\n        host: 'localhost',\n        auth: null,\n        slashes: true,\n        protocol: 'https:',\n        useElectronNet: true,\n        decompress: true,\n        retries: [Function],\n        path: null,\n        _defaultAgent: [Agent],\n        servername: 'localhost',\n        singleUse: true } },\n  connection:\n   TLSSocket {\n     _tlsOptions:\n      { pipe: false,\n        secureContext: [SecureContext],\n        isServer: false,\n        requestCert: true,\n        rejectUnauthorized: false,\n        session: undefined,\n        ALPNProtocols: undefined,\n        requestOCSP: undefined },\n     _secureEstablished: true,\n     _securePending: false,\n     _newSessionPending: false,\n     _controlReleased: true,\n     _SNICallback: null,\n     servername: 'localhost',\n     alpnProtocol: false,\n     authorized: false,\n     authorizationError: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n     encrypted: true,\n     _events:\n      [Object: null prototype] {\n        close: [Array],\n        end: [Function: onReadableStreamEnd],\n        newListener: [Function: keylogNewListener],\n        secure: [Function: onConnectSecure],\n        free: [Function: onFree],\n        agentRemove: [Function: onRemove],\n        drain: [Function: ondrain],\n        error: [Function: socketErrorListener] },\n     _eventsCount: 8,\n     connecting: false,\n     _hadError: false,\n     _handle: null,\n     _parent: null,\n     _host: 'localhost',\n     _readableState:\n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: true,\n        endEmitted: true,\n        reading: false,\n        sync: false,\n        needReadable: false,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: false,\n        autoDestroy: false,\n        destroyed: true,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: false,\n     _maxListeners: undefined,\n     _writableState:\n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: true,\n        needDrain: false,\n        ending: true,\n        ended: true,\n        finished: true,\n        destroyed: true,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: true,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: false,\n     allowHalfOpen: false,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: undefined,\n     _server: null,\n     ssl: null,\n     _requestCert: true,\n     _rejectUnauthorized: false,\n     parser: null,\n     _httpMessage:\n      ClientRequest {\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: false,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        socket: [Circular],\n        connection: [Circular],\n        _header:\n         'GET /ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399 HTTP/1.1\\r\\nuser-agent: got/7.1.0 (https://github.com/sindresorhus/got)\\r\\naccept-encoding: gzip,deflate\\r\\naccept: application/json\\r\\nHost: localhost:3000\\r\\nConnection: close\\r\\n\\r\\n',\n        _onPendingData: [Function: noopPendingOutput],\n        agent: [Agent],\n        socketPath: undefined,\n        timeout: undefined,\n        method: 'GET',\n        insecureHTTPParser: undefined,\n        path:\n         '/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n        _ended: true,\n        res: [IncomingMessage],\n        aborted: undefined,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     write: [Function: writeAfterFIN],\n     [Symbol(res)]: null,\n     [Symbol(asyncId)]: 140,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(timeout)]: null,\n     [Symbol(kBytesRead)]: 2124,\n     [Symbol(kBytesWritten)]: 250,\n     [Symbol(connect-options)]:\n      { rejectUnauthorized: false,\n        ciphers:\n         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n        checkServerIdentity: [Function: checkServerIdentity],\n        minDHSize: 1024,\n        encoding: null,\n        _agentKey:\n         'localhost:3000:::-----BEGIN CERTIFICATE-----\\r\\nMIIEeTCCAmGgAwIBAgIBATANBgkqhkiG9w0BAQsFADAAMB4XDTIxMDUxNTE3MDMy\\r\\nNFoXDTIxMDUxNTE3MDMyNFowADCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC\\r\\nggIBALZ51wKd3R6/hc0Gh8PnrHtzMJcxGy4dhq3l18wqKAEZ4KlwgrshsFwSxFe3\\r\\nymhSME9a+96uQ+vVKZ8IaxHNgne6jwT4+i+YRMURfqFeNwNPRGRmvvFw6dFVKSD2\\r\\nMVN6PD5FcFazDPyaViGRaRfuQ1Ftbb/ITwRiRVG1TtUztvro9kzYe6SRvcsKkUVF\\r\\nk4NJAZjx+JVoNjgZYtdZ0PnPpV9/2OgxaJfY0ZsBNx7jvqVbu972Q3+D0rot1SBk\\r\\num71wprpMzLSN+QdW3NR517sEYPLE3kb21D6lQmTABfNxqq1MgouopG97MEGlAqH\\r\\nTi5Uw2r4tsWZingUazTVf3fg5xDiZSE0RQgq9JN79miIlwrxJZsaR2bJdcWe6xlA\\r\\n4+d7kxWJkL9MyIoXy6w4OfCMAz+xUJtngmSTFr9tZO31OYWoVhHXBx9s5pg29u3p\\r\\n7is5UcS4drjD1q9b+LZ92YKwnP177CbfPXhwjUL/HuknymxSKsSQBhcYjtB028Zj\\r\\nhiyyAJqZ7XFC+HRvhNXjB8Xzyy912M53/oSKQjDTMAhrFXi0nzbCe4BOmRL8LQrR\\r\\n20vF1hIBXoIYYBAXJnRLdS2vd3wZdjkLNaE7cgRVQCnaDWEQqIdaonv5OY0AX7WL\\r\\ngh+E+YFThCX4UQFpHlQk+ksWm7DBl3Tni7M8X8t6j0Ra8qh5AgMBAAEwDQYJKoZI\\r\\nhvcNAQELBQADggIBAGLGIDeJ6AzqR08eQ5UyOzI5HBVmqjxu1hkXUdYNrSNwPjcs\\r\\nnItzhZ4TCDa/3VR7YnDDgsUUSA2OKmGKOlFFhiYc4zDH95VbbQCHY+0qpT1c7bxc\\r\\nQVXZd1KJLTZKaVENBc3ZSxnFkI9lbhZ7ghy63BbeMc6lxknI+/HgBDs6DYvFFKbN\\r\\nJZA4B2VmwSbia/IshR3szJCvW6zz4Ny5Kv5ABJ2jF2mZLifb8+USx7skBpvw1MnB\\r\\nytnUbk8IImEOtsOPkA+J2OiBpLFjg3R5D+Z+FX3NTXsjKdJZXhPksEkF9afuI81M\\r\\nEN7XCdu+m/TOas4tJN9iR/uEvKt9X9X/rFK8M7EmKRT0L5vFj//3U5bGvACCQfiZ\\r\\n9n680kKoVkYgI2PrMDCnBFZkTVX6K4sSlwha+BqczUu50XAJ6sP3jS++NMLRYnuB\\r\\nKd/E55fUyheT7JsOniwSQ62jItEGuZ6G6PvudyFUCN9D2dUxTfCKsfbcfjjlT9gi\\r\\nX1F++CgNWmsuSS3ytuZhrBFDBl3pgNq9cC0zdVpCI6IZgLweudqFoRHmDt+clOGG\\r\\niE1Kowm2ja3VMjAj8SJCLnHQKMPdbjlnQc3bZAnovD6noKogaAQcLO4sBcedELjU\\r\\nacx0/3BnDnxP2X48jd2/g+DJTQ8onh4wu4DW7TKsqGg2BOmFPwQX1+6wR866\\r\\n-----END CERTIFICATE-----\\r\\n:::-----BEGIN RSA PRIVATE KEY-----\\r\\n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\\r\\n-----END RSA PRIVATE KEY-----\\r\\n::false::::::::::',\n        followRedirect: true,\n        method: 'GET',\n        headers: [Object],\n        cert:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 45 65 54 43 43 41 6d 47 67 41 77 49 42 41 67 49 42 41 ... >,\n        key:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 4b 51 49 42 41 41 4b 43 41 67 45 41 74 ... >,\n        json: true,\n        href:\n         'https://localhost:3000/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n        pathname: '/ca',\n        search:\n         '?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n        hash: null,\n        hostname: 'localhost',\n        port: '3000',\n        host: 'localhost',\n        auth: null,\n        slashes: true,\n        protocol: 'https:',\n        useElectronNet: true,\n        decompress: true,\n        retries: [Function],\n        path: null,\n        _defaultAgent: [Agent],\n        servername: 'localhost',\n        singleUse: true } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  headers:\n   { 'x-dns-prefetch-control': 'off',\n     'x-frame-options': 'SAMEORIGIN',\n     'strict-transport-security': 'max-age=15552000; includeSubDomains',\n     'x-download-options': 'noopen',\n     'x-content-type-options': 'nosniff',\n     'x-xss-protection': '1; mode=block',\n     'surrogate-control': 'no-store',\n     'cache-control': 'no-store, no-cache, must-revalidate, proxy-revalidate',\n     pragma: 'no-cache',\n     expires: '0',\n     'content-type': 'application/json; charset=utf-8',\n     etag: 'W/\"7e9-J1RDS28jzR7/EVagjzZUKO9qlnI\"',\n     vary: 'Accept-Encoding',\n     'content-encoding': 'gzip',\n     date: 'Sat, 15 May 2021 22:01:58 GMT',\n     connection: 'close',\n     'transfer-encoding': 'chunked' },\n  rawHeaders:\n   [ 'X-DNS-Prefetch-Control',\n     'off',\n     'X-Frame-Options',\n     'SAMEORIGIN',\n     'Strict-Transport-Security',\n     'max-age=15552000; includeSubDomains',\n     'X-Download-Options',\n     'noopen',\n     'X-Content-Type-Options',\n     'nosniff',\n     'X-XSS-Protection',\n     '1; mode=block',\n     'Surrogate-Control',\n     'no-store',\n     'Cache-Control',\n     'no-store, no-cache, must-revalidate, proxy-revalidate',\n     'Pragma',\n     'no-cache',\n     'Expires',\n     '0',\n     'Content-Type',\n     'application/json; charset=utf-8',\n     'ETag',\n     'W/\"7e9-J1RDS28jzR7/EVagjzZUKO9qlnI\"',\n     'Vary',\n     'Accept-Encoding',\n     'Content-Encoding',\n     'gzip',\n     'Date',\n     'Sat, 15 May 2021 22:01:58 GMT',\n     'Connection',\n     'close',\n     'Transfer-Encoding',\n     'chunked' ],\n  trailers: {},\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url:\n   'https://localhost:3000/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n  method: null,\n  statusCode: 200,\n  statusMessage: 'OK',\n  client:\n   TLSSocket {\n     _tlsOptions:\n      { pipe: false,\n        secureContext: [SecureContext],\n        isServer: false,\n        requestCert: true,\n        rejectUnauthorized: false,\n        session: undefined,\n        ALPNProtocols: undefined,\n        requestOCSP: undefined },\n     _secureEstablished: true,\n     _securePending: false,\n     _newSessionPending: false,\n     _controlReleased: true,\n     _SNICallback: null,\n     servername: 'localhost',\n     alpnProtocol: false,\n     authorized: false,\n     authorizationError: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n     encrypted: true,\n     _events:\n      [Object: null prototype] {\n        close: [Array],\n        end: [Function: onReadableStreamEnd],\n        newListener: [Function: keylogNewListener],\n        secure: [Function: onConnectSecure],\n        free: [Function: onFree],\n        agentRemove: [Function: onRemove],\n        drain: [Function: ondrain],\n        error: [Function: socketErrorListener] },\n     _eventsCount: 8,\n     connecting: false,\n     _hadError: false,\n     _handle: null,\n     _parent: null,\n     _host: 'localhost',\n     _readableState:\n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: true,\n        endEmitted: true,\n        reading: false,\n        sync: false,\n        needReadable: false,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: false,\n        autoDestroy: false,\n        destroyed: true,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: false,\n     _maxListeners: undefined,\n     _writableState:\n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: true,\n        needDrain: false,\n        ending: true,\n        ended: true,\n        finished: true,\n        destroyed: true,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: true,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: false,\n     allowHalfOpen: false,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: undefined,\n     _server: null,\n     ssl: null,\n     _requestCert: true,\n     _rejectUnauthorized: false,\n     parser: null,\n     _httpMessage:\n      ClientRequest {\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: false,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        socket: [Circular],\n        connection: [Circular],\n        _header:\n         'GET /ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399 HTTP/1.1\\r\\nuser-agent: got/7.1.0 (https://github.com/sindresorhus/got)\\r\\naccept-encoding: gzip,deflate\\r\\naccept: application/json\\r\\nHost: localhost:3000\\r\\nConnection: close\\r\\n\\r\\n',\n        _onPendingData: [Function: noopPendingOutput],\n        agent: [Agent],\n        socketPath: undefined,\n        timeout: undefined,\n        method: 'GET',\n        insecureHTTPParser: undefined,\n        path:\n         '/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n        _ended: true,\n        res: [IncomingMessage],\n        aborted: undefined,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     write: [Function: writeAfterFIN],\n     [Symbol(res)]: null,\n     [Symbol(asyncId)]: 140,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(timeout)]: null,\n     [Symbol(kBytesRead)]: 2124,\n     [Symbol(kBytesWritten)]: 250,\n     [Symbol(connect-options)]:\n      { rejectUnauthorized: false,\n        ciphers:\n         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n        checkServerIdentity: [Function: checkServerIdentity],\n        minDHSize: 1024,\n        encoding: null,\n        _agentKey:\n         'localhost:3000:::-----BEGIN CERTIFICATE-----\\r\\nMIIEeTCCAmGgAwIBAgIBATANBgkqhkiG9w0BAQsFADAAMB4XDTIxMDUxNTE3MDMy\\r\\nNFoXDTIxMDUxNTE3MDMyNFowADCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC\\r\\nggIBALZ51wKd3R6/hc0Gh8PnrHtzMJcxGy4dhq3l18wqKAEZ4KlwgrshsFwSxFe3\\r\\nymhSME9a+96uQ+vVKZ8IaxHNgne6jwT4+i+YRMURfqFeNwNPRGRmvvFw6dFVKSD2\\r\\nMVN6PD5FcFazDPyaViGRaRfuQ1Ftbb/ITwRiRVG1TtUztvro9kzYe6SRvcsKkUVF\\r\\nk4NJAZjx+JVoNjgZYtdZ0PnPpV9/2OgxaJfY0ZsBNx7jvqVbu972Q3+D0rot1SBk\\r\\num71wprpMzLSN+QdW3NR517sEYPLE3kb21D6lQmTABfNxqq1MgouopG97MEGlAqH\\r\\nTi5Uw2r4tsWZingUazTVf3fg5xDiZSE0RQgq9JN79miIlwrxJZsaR2bJdcWe6xlA\\r\\n4+d7kxWJkL9MyIoXy6w4OfCMAz+xUJtngmSTFr9tZO31OYWoVhHXBx9s5pg29u3p\\r\\n7is5UcS4drjD1q9b+LZ92YKwnP177CbfPXhwjUL/HuknymxSKsSQBhcYjtB028Zj\\r\\nhiyyAJqZ7XFC+HRvhNXjB8Xzyy912M53/oSKQjDTMAhrFXi0nzbCe4BOmRL8LQrR\\r\\n20vF1hIBXoIYYBAXJnRLdS2vd3wZdjkLNaE7cgRVQCnaDWEQqIdaonv5OY0AX7WL\\r\\ngh+E+YFThCX4UQFpHlQk+ksWm7DBl3Tni7M8X8t6j0Ra8qh5AgMBAAEwDQYJKoZI\\r\\nhvcNAQELBQADggIBAGLGIDeJ6AzqR08eQ5UyOzI5HBVmqjxu1hkXUdYNrSNwPjcs\\r\\nnItzhZ4TCDa/3VR7YnDDgsUUSA2OKmGKOlFFhiYc4zDH95VbbQCHY+0qpT1c7bxc\\r\\nQVXZd1KJLTZKaVENBc3ZSxnFkI9lbhZ7ghy63BbeMc6lxknI+/HgBDs6DYvFFKbN\\r\\nJZA4B2VmwSbia/IshR3szJCvW6zz4Ny5Kv5ABJ2jF2mZLifb8+USx7skBpvw1MnB\\r\\nytnUbk8IImEOtsOPkA+J2OiBpLFjg3R5D+Z+FX3NTXsjKdJZXhPksEkF9afuI81M\\r\\nEN7XCdu+m/TOas4tJN9iR/uEvKt9X9X/rFK8M7EmKRT0L5vFj//3U5bGvACCQfiZ\\r\\n9n680kKoVkYgI2PrMDCnBFZkTVX6K4sSlwha+BqczUu50XAJ6sP3jS++NMLRYnuB\\r\\nKd/E55fUyheT7JsOniwSQ62jItEGuZ6G6PvudyFUCN9D2dUxTfCKsfbcfjjlT9gi\\r\\nX1F++CgNWmsuSS3ytuZhrBFDBl3pgNq9cC0zdVpCI6IZgLweudqFoRHmDt+clOGG\\r\\niE1Kowm2ja3VMjAj8SJCLnHQKMPdbjlnQc3bZAnovD6noKogaAQcLO4sBcedELjU\\r\\nacx0/3BnDnxP2X48jd2/g+DJTQ8onh4wu4DW7TKsqGg2BOmFPwQX1+6wR866\\r\\n-----END CERTIFICATE-----\\r\\n:::-----BEGIN RSA PRIVATE KEY-----\\r\\n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\\r\\n-----END RSA PRIVATE KEY-----\\r\\n::false::::::::::',\n        followRedirect: true,\n        method: 'GET',\n        headers: [Object],\n        cert:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 45 65 54 43 43 41 6d 47 67 41 77 49 42 41 67 49 42 41 ... >,\n        key:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 4b 51 49 42 41 41 4b 43 41 67 45 41 74 ... >,\n        json: true,\n        href:\n         'https://localhost:3000/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n        pathname: '/ca',\n        search:\n         '?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n        hash: null,\n        hostname: 'localhost',\n        port: '3000',\n        host: 'localhost',\n        auth: null,\n        slashes: true,\n        protocol: 'https:',\n        useElectronNet: true,\n        decompress: true,\n        retries: [Function],\n        path: null,\n        _defaultAgent: [Agent],\n        servername: 'localhost',\n        singleUse: true } },\n  _consuming: false,\n  _dumped: false,\n  req:\n   ClientRequest {\n     _events:\n      [Object: null prototype] { error: [Function], prefinish: [Function: requestOnPrefinish] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: true,\n     chunkedEncoding: false,\n     shouldKeepAlive: false,\n     useChunkedEncodingByDefault: false,\n     sendDate: false,\n     _removedConnection: false,\n     _removedContLen: false,\n     _removedTE: false,\n     _contentLength: 0,\n     _hasBody: true,\n     _trailer: '',\n     finished: true,\n     _headerSent: true,\n     socket:\n      TLSSocket {\n        _tlsOptions: [Object],\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        _SNICallback: null,\n        servername: 'localhost',\n        alpnProtocol: false,\n        authorized: false,\n        authorizationError: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n        encrypted: true,\n        _events: [Object],\n        _eventsCount: 8,\n        connecting: false,\n        _hadError: false,\n        _handle: null,\n        _parent: null,\n        _host: 'localhost',\n        _readableState: [ReadableState],\n        readable: false,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: false,\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: null,\n        _requestCert: true,\n        _rejectUnauthorized: false,\n        parser: null,\n        _httpMessage: [Circular],\n        write: [Function: writeAfterFIN],\n        [Symbol(res)]: null,\n        [Symbol(asyncId)]: 140,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBytesRead)]: 2124,\n        [Symbol(kBytesWritten)]: 250,\n        [Symbol(connect-options)]: [Object] },\n     connection:\n      TLSSocket {\n        _tlsOptions: [Object],\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        _SNICallback: null,\n        servername: 'localhost',\n        alpnProtocol: false,\n        authorized: false,\n        authorizationError: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n        encrypted: true,\n        _events: [Object],\n        _eventsCount: 8,\n        connecting: false,\n        _hadError: false,\n        _handle: null,\n        _parent: null,\n        _host: 'localhost',\n        _readableState: [ReadableState],\n        readable: false,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: false,\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: null,\n        _requestCert: true,\n        _rejectUnauthorized: false,\n        parser: null,\n        _httpMessage: [Circular],\n        write: [Function: writeAfterFIN],\n        [Symbol(res)]: null,\n        [Symbol(asyncId)]: 140,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBytesRead)]: 2124,\n        [Symbol(kBytesWritten)]: 250,\n        [Symbol(connect-options)]: [Object] },\n     _header:\n      'GET /ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399 HTTP/1.1\\r\\nuser-agent: got/7.1.0 (https://github.com/sindresorhus/got)\\r\\naccept-encoding: gzip,deflate\\r\\naccept: application/json\\r\\nHost: localhost:3000\\r\\nConnection: close\\r\\n\\r\\n',\n     _onPendingData: [Function: noopPendingOutput],\n     agent:\n      Agent {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object],\n        requests: {},\n        sockets: {},\n        freeSockets: {},\n        keepAliveMsecs: 1000,\n        keepAlive: false,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        maxCachedSessions: 100,\n        _sessionCache: [Object] },\n     socketPath: undefined,\n     timeout: undefined,\n     method: 'GET',\n     insecureHTTPParser: undefined,\n     path:\n      '/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n     _ended: true,\n     res:\n      IncomingMessage {\n        _readableState: [ReadableState],\n        readable: false,\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        socket: [TLSSocket],\n        connection: [TLSSocket],\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        headers: [Object],\n        rawHeaders: [Array],\n        trailers: {},\n        rawTrailers: [],\n        aborted: false,\n        upgrade: false,\n        url:\n         'https://localhost:3000/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n        method: null,\n        statusCode: 200,\n        statusMessage: 'OK',\n        client: [TLSSocket],\n        _consuming: true,\n        _dumped: false,\n        req: [Circular],\n        requestUrl:\n         'https://localhost:3000/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399' },\n     aborted: undefined,\n     timeoutCb: null,\n     upgradeOrConnect: false,\n     parser: null,\n     maxHeadersCount: null,\n     [Symbol(isCorked)]: false,\n     [Symbol(outHeadersKey)]:\n      [Object: null prototype] {\n        'user-agent': [Array],\n        'accept-encoding': [Array],\n        accept: [Array],\n        host: [Array] } },\n  requestUrl:\n   'https://localhost:3000/ca?token=7255e95819bbb5a94d3a5cb7dd832d3b1580bd4671acce3a5efb6cd2983dd399',\n  setTimeout: [Function: bound setTimeout],\n  redirectUrls: [],\n  body:\n   { ca:\n      '-----BEGIN CERTIFICATE-----\\nMIIFjTCCA3WgAwIBAgIJAIwY4z0q5iNzMA0GCSqGSIb3DQEBCwUAMF0xCzAJBgNV\\nBAYTAklTMRIwEAYDVQQHDAlSZXlramF2aWsxHDAaBgNVBAoME0xhbWFzc3UgT3Bl\\ncmF0b3IgQ0ExHDAaBgNVBAMME2xhbWFzc3Utb3BlcmF0b3IuaXMwHhcNMjEwNTE0\\nMTcyMDQwWhcNMzEwMjExMTcyMDQwWjBdMQswCQYDVQQGEwJJUzESMBAGA1UEBwwJ\\nUmV5a2phdmlrMRwwGgYDVQQKDBNMYW1hc3N1IE9wZXJhdG9yIENBMRwwGgYDVQQD\\nDBNsYW1hc3N1LW9wZXJhdG9yLmlzMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAs6OlDAIbtxk+JOeuuHf311tgSbuSPA0IJsL3GpmYF3aTtW/nLH7dip1C\\nm6cJr0MuWVwROQOEb2kb4kkwoDzytZwrEzIyjbA9DHOIaF4Q834xPrbEl7WDNrQe\\nnVAze4dr13/qq5XN4p53gffc66i0Je1n/JbcA1+f+tQ3W9NeErUxamkVcBFuA1E7\\ndAUaY/4cDVJO01encp+nSwzP1SYt8Uh/lYARTWpAR/46JaMscGqr9nIMJF+MqUbo\\nG8NvW/yHJY6y+Zq3M03gEe+X0hLRlX4w4DJIVfFVrNdNYs8BXgaD/aGUgFKeRO9n\\nP0ZsTFfHQcMwxjuthNC57Nac2Xz7l9zacq45QoZqqycJ1S9X1N+T4SFLeu1R5ZNR\\nF2JcqSoZxwiFGvlx61haeLVKbzZhwoj2qfVho+TpfNSnHVwi/QBwDo1N316Sg7mv\\nzxcVEDyG9TK35sTN+tuC1RfyFsN03lAIYgcg1w/pzOuKYbORZ5rsHjqdaGYkdkXN\\n1nZGvvwpWhyakUQfHEyOvkfaCVweGwpDDj+Mu9mynXNSDzYm0POvo7vBHAeedhJn\\ns+/vFodWK5TnMbZnRWJwuBBsQVfc8YR/vGB6q6/3xr0XScjTUFbyHMrzagknXvz6\\ngRxqi8jKq0ETO2mB+gXpOlkUCWrjVYk/JueV4DxgxCJDuPqNAqsCAwEAAaNQME4w\\nHQYDVR0OBBYEFF9Q5uzMpAKAHR58kKzqwJLDGaW2MB8GA1UdIwQYMBaAFF9Q5uzM\\npAKAHR58kKzqwJLDGaW2MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggIB\\nAK0RWZQpBvDmBgz+ge9fICu91H4cq4oh/cDjgwsudJYLl077DXgsnzUCFWS0HCOP\\nS/pk4IdUW7iwqhoDdmt/Qy/Gsk+Qe4HTOIq/ucDq4ineHxmX+K1hBkCaWb6K3Psn\\n2qiISNPi67Gh/Us4u53HNb4Fld++qN4IcwQxcZDyJU41Nd10GEQV4Ozvea0F1tlV\\nJluEDm4hdjG3+4AmYMlXoKNebENlc3cTGRE4/jK7clnVoqGDBlJTLSoWB7hXYY25\\np/wHwa1NTaU+hzV+2L6R1G1wDRKklGlEzDqFoco5d4LWzCvPZRHwmA0tlQq/4OI/\\nfs14QLxNA7RfBEuND+WuV2JFml5HwwXjzk0kLuiOC+foehCE89HtngrnDtRpl5mV\\nfHIROBngtDa5yYVU6QX3Z6U+leKV4eT6gem+Kb71lYUf6pEKRyF4wHcyNtVOrqlJ\\nBBP5rb+ZiuVwiMFyRzu+oPG0nhHQ7/kko7yldwL0c5Q+xLZxdi6ri8Evz49LZHcJ\\nOtOckRd9peKDEG9jqi/F3t+hFI/rPYiFKcpdBwyMS3HYonYKJBmIl4wp+qbA1U/I\\nGnVokPoFmLFAgNuP135lKNG0PePmeKvYeIa7kBwyHEc2iWvUM9TWCs9m/rK113EZ\\nSNjFPeBbry/bNixRbxibeo2wRHs6eGLJaPTg8lusB3N8\\n-----END CERTIFICATE-----\\n' } }"}
{"id":"dcdba60f-aa40-4721-ac2d-c682f68ae365","timestamp":"2021-05-15T22:02:05.699Z","serial":0,"level":"LOG","msg":"{ RequestError: connect ECONNREFUSED 127.0.0.1:3000\n    at ClientRequest.req.once.err (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/node_modules/got/index.js:111:21)\n    at Object.onceWrapper (events.js:286:20)\n    at ClientRequest.emit (events.js:198:13)\n    at TLSSocket.socketErrorListener (_http_client.js:401:9)\n    at TLSSocket.emit (events.js:198:13)\n    at emitErrorNT (internal/streams/destroy.js:91:8)\n    at emitErrorAndCloseNT (internal/streams/destroy.js:59:3)\n    at process._tickCallback (internal/process/next_tick.js:63:19)\n  name: 'RequestError',\n  code: 'ECONNREFUSED',\n  host: 'localhost:3000',\n  hostname: 'localhost',\n  method: 'POST',\n  path:\n   '/pair?token=7079561b2709634443c92358cba516adc2a73673e4199d40ad26c9964510a9d4&model=Linux',\n  protocol: 'https:',\n  url:\n   'https://localhost:3000/pair?token=7079561b2709634443c92358cba516adc2a73673e4199d40ad26c9964510a9d4&model=Linux' }"}
{"id":"db863d23-e43f-43ee-8101-1a233b785c3f","timestamp":"2021-05-15T22:02:05.706Z","serial":0,"level":"LOG","msg":"Error: Pairing error - Please make sure you have a stable network connection and that you are using the right QR Code\n    at got.then.catch.err (/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/lib/pairing.js:67:12)\n    at process._tickCallback (internal/process/next_tick.js:68:7)"}
{"id":"df7782ea-8e9b-4595-a70b-30881f24e55e","timestamp":"2021-05-15T22:02:05.707Z","serial":0,"level":"LOG","msg":"new brain state: pairingError"}
{"id":"34c64a00-84d6-4447-9f40-234788b5efd1","timestamp":"2021-05-15T22:02:57.752Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  '--devBoard' ]"}
{"id":"381b2cde-ab9f-4b29-9ed3-927bb6a9b2c8","timestamp":"2021-05-15T22:02:57.760Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79WS:V.07LC-CD-A++.%-X7UMW.7SPB45OITHOT.3H0$CI$-MAZW1YRXVSBYIS',\n  devBoard: true }"}
{"id":"d7489faf-7a8b-4a44-bb13-085fd195332a","timestamp":"2021-05-15T22:02:58.034Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"0ef0402e-2678-4e7a-b25c-0dc37e627d23","timestamp":"2021-05-15T22:02:58.052Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"793dd34e-9e30-48f3-8987-6874e9580910","timestamp":"2021-05-15T22:02:58.013Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"ad440c40-eae1-425d-851c-0c843c8566e4","timestamp":"2021-05-15T22:02:58.007Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"540216da-726e-4557-bca0-3597b4660d11","timestamp":"2021-05-15T22:02:58.013Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"62d445ea-88fd-4344-8eb3-cc989852dc91","timestamp":"2021-05-15T22:02:58.059Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"4137670b-93fe-4ec5-9406-b4d46d0bd07e","timestamp":"2021-05-15T22:02:58.060Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"08fabdc6-2288-441c-a60c-b061c7079997","timestamp":"2021-05-15T22:02:58.064Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"27f3fce9-e16b-41ff-a3ee-dd0d3b70607e","timestamp":"2021-05-15T22:02:58.063Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"8f9c7a61-ff00-41b8-9315-37d037eb0d1b","timestamp":"2021-05-15T22:02:58.061Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"3396eb07-71bd-4265-9adb-8f3799e15364","timestamp":"2021-05-15T22:02:58.065Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"f4496e18-8fa7-4414-ba28-f08a8086be1b","timestamp":"2021-05-15T22:02:58.069Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.1 MB, memFree: 19.0%\n  nodeUptime: 0.00h, osUptime: 32.77h"}
{"id":"d9927857-0ec6-4629-b8de-ec129db45b6a","timestamp":"2021-05-15T22:02:58.113Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"c8e9afc5-d3b8-4698-92dc-d10c9a30bc19","timestamp":"2021-05-15T22:03:27.853Z","serial":0,"level":"LOG","msg":"[ '/home/shivc/n/n/versions/node/10.24.1/bin/node',\n  '/mnt/c/Users/shivc/Documents/Crypto/lamassu-machine/bin/lamassu-machine',\n  '--mockBillValidator',\n  '--mockBillDispenser',\n  '--mockCam',\n  '--mockPair',\n  '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79Y+A*MLRXCXM78BV7JW3:Q-3DCUDUYB-/VSPESDM G4KL.X-DOF.LXJKF$2I:',\n  '--devBoard' ]"}
{"id":"0e488c90-10c1-4a5d-bd81-12c64d6fcb3a","timestamp":"2021-05-15T22:03:27.862Z","serial":0,"level":"LOG","msg":"{ brain:\n   { freeMemRatio: 0.01,\n     powerStatus: null,\n     dataPath: 'data',\n     wifiConfigPath: null,\n     mockCryptoQR: { BTC: 'bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9' },\n     mockCameraImage: 'mock_data/compliance/license.jpg',\n     connectingTimeout: 40000,\n     qrTimeout: 60000,\n     goodbyeTimeout: 2000,\n     invalidAddressTimeout: 10000,\n     billTimeout: 60000,\n     completedTimeout: 60000,\n     periodicLogInterval: 3600000,\n     insufficientFundsTimeout: 30000,\n     confirmTimeout: 60000,\n     checkIdle: 10000,\n     idleTime: 600000,\n     exitTime: 10800000,\n     checkPowerTime: 1000,\n     checkPowerTimeout: 4000,\n     promoCodeTimeout: 15000,\n     locale: { localeInfo: [Object] },\n     transactionLogPath: 'log/transaction.log',\n     certs: { certFile: 'client.pem', keyFile: 'client.key' },\n     connectionInfoPath: 'connection_info.json',\n     wsPort: 8080,\n     wsHost: 'localhost' },\n  cryptomatModel: 'sintra',\n  wifi:\n   { wpa: { socket: null },\n     connectionTimeout: 20000,\n     checkInterval: 1000,\n     scanInterval: 5000,\n     minSignal: -100,\n     maxSignal: -50,\n     truncateLength: 16 },\n  billValidator: { rs232: { device: null } },\n  billDispenser:\n   { device: null,\n     _mockedBalance: { cassettes: [Array] },\n     _mockedError: { '0x51': [Array] } },\n  id003:\n   { timeout: 60000,\n     transientTimeout: 60000,\n     resetThrottle: 120000 },\n  updater:\n   { port: 8000,\n     host: 'updates.lamassu.is',\n     updateInterval: 30000,\n     deathInterval: 600000,\n     extractor: { sigAlg: 'RSA-SHA256', hashAlg: 'sha256' } },\n  trader:\n   { protocol: 'https',\n     host: 'localhost',\n     port: 3000,\n     rejectUnauthorized: false,\n     settings:\n      { pollInterval: 5000,\n        tradeInterval: 10000,\n        retryInterval: 5000,\n        sendTimeout: 90000,\n        pollTimeout: 60000 } },\n  scanner:\n   { timeout: 120000,\n     manatee: { license: [Object] },\n     mock: { data: [Object] } },\n  mockBillValidator: true,\n  mockBillDispenser: true,\n  mockCam: true,\n  mockPair:\n   '17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79Y+A*MLRXCXM78BV7JW3:Q-3DCUDUYB-/VSPESDM G4KL.X-DOF.LXJKF$2I:',\n  devBoard: true }"}
{"id":"c5f8f64f-0f2e-4f5f-870e-c6f08b72a67d","timestamp":"2021-05-15T22:03:28.004Z","serial":0,"level":"LOG","msg":"Listening on websocket localhost:8080"}
{"id":"bb8296b9-b4ea-4d82-b129-9b7e7b368587","timestamp":"2021-05-15T22:03:28.020Z","serial":0,"level":"LOG","msg":"USB reset not set up."}
{"id":"ca8617b7-18e9-45d1-a0a1-f1c418abe9b3","timestamp":"2021-05-15T22:03:27.987Z","serial":1,"level":"LOG","msg":"LED: kill any hangovers"}
{"id":"2d63a4e1-9c38-4e36-a1dc-470926d73222","timestamp":"2021-05-15T22:03:27.982Z","serial":0,"level":"LOG","msg":"crypto Machine software initialized."}
{"id":"114d1821-8319-4c9e-9745-f557dcb852d7","timestamp":"2021-05-15T22:03:27.987Z","serial":0,"level":"LOG","msg":"DEBUG100"}
{"id":"950ce775-e06e-451a-9b0b-2cf2740e954d","timestamp":"2021-05-15T22:03:28.025Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"f9ff3ab2-0ff3-429f-b495-313762dbb9b6","timestamp":"2021-05-15T22:03:28.026Z","serial":0,"level":"LOG","msg":"browser not connected"}
{"id":"49b57f5e-23d9-4156-b400-e530c72e7a5c","timestamp":"2021-05-15T22:03:28.035Z","serial":0,"level":"LOG","msg":"new brain state: wifiConnected"}
{"id":"d3cbc2c0-757e-4e82-bf3a-6a6c0a41d602","timestamp":"2021-05-15T22:03:28.033Z","serial":0,"level":"LOG","msg":"DEBUG1"}
{"id":"30fe431e-518d-4974-9330-53d2e2ef7890","timestamp":"2021-05-15T22:03:28.049Z","serial":0,"level":"LOG","msg":"version: 7.5.0-beta.2, cpuLoad: 0.58, memUse: 61.4 MB, memFree: 19.8%\n  nodeUptime: 0.00h, osUptime: 32.77h"}
{"id":"460d26a3-03aa-4a75-9300-881870885f98","timestamp":"2021-05-15T22:03:28.045Z","serial":0,"level":"LOG","msg":"server bound"}
{"id":"f1359a5f-cfa7-4995-a565-c4ced244c5fe","timestamp":"2021-05-15T22:03:28.044Z","serial":0,"level":"LOG","msg":"new brain state: unpaired"}
{"id":"6439d9a9-f307-4ee8-9b65-099973b13c07","timestamp":"2021-05-15T22:03:28.510Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"7f420229-3147-428e-acef-77b526336826","timestamp":"2021-05-15T22:03:36.222Z","serial":0,"level":"LOG","msg":"connected to browser"}
{"id":"e355ac14-3e51-4f8b-b249-34231407302e","timestamp":"2021-05-15T22:03:38.914Z","serial":0,"level":"LOG","msg":"new brain state: pairingScan"}
{"id":"1932a96e-4401-4520-81b0-ab0dfd933f04","timestamp":"2021-05-15T22:03:43.917Z","serial":0,"level":"LOG","msg":"Scanning totem"}
{"id":"c6cfd02a-b978-4351-a575-e8ebce664a3f","timestamp":"2021-05-15T22:03:43.918Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79Y+A*MLRXCXM78BV7JW3:Q-3DCUDUYB-/VSPESDM G4KL.X-DOF.LXJKF$2I:"}
{"id":"a99d55aa-d475-4cb6-9770-225b580c483e","timestamp":"2021-05-15T22:03:43.921Z","serial":0,"level":"LOG","msg":"WTF"}
{"id":"ca4a76ed-8b69-4f79-9a4c-eb595a5a7404","timestamp":"2021-05-15T22:03:43.922Z","serial":0,"level":"LOG","msg":"new brain state: pairing"}
{"id":"a5e2fac0-b9f9-44f7-beaa-384252db600d","timestamp":"2021-05-15T22:03:43.926Z","serial":0,"level":"LOG","msg":"Linux"}
{"id":"e5cff4d4-c866-47cb-970c-a052170874ab","timestamp":"2021-05-15T22:03:43.927Z","serial":0,"level":"LOG","msg":"17BZC4C ZWJYB6NAWN*8 LI-8.HV1*ZQHJL:*U.DQT4U+79Y+A*MLRXCXM78BV7JW3:Q-3DCUDUYB-/VSPESDM G4KL.X-DOF.LXJKF$2I:"}
{"id":"0a0037f0-2819-43ce-8eeb-df173ade27c4","timestamp":"2021-05-15T22:03:43.930Z","serial":0,"level":"LOG","msg":"In Pair"}
{"id":"e2c2bfec-ec5b-4bd6-85ee-8aeb5afdc8c8","timestamp":"2021-05-15T22:03:43.948Z","serial":0,"level":"LOG","msg":"In Pair - 2"}
{"id":"9fadeb04-1166-4b35-b8ba-8cc832dd8da6","timestamp":"2021-05-15T22:03:43.955Z","serial":0,"level":"LOG","msg":"https://localhost:3000/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863"}
{"id":"918793ae-f48c-49df-9e94-62cf98831d5e","timestamp":"2021-05-15T22:03:49.027Z","serial":0,"level":"LOG","msg":"PassThrough {\n  _readableState:\n   ReadableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     buffer: BufferList { head: null, tail: null, length: 0 },\n     length: 0,\n     pipes: null,\n     pipesCount: 0,\n     flowing: false,\n     ended: true,\n     endEmitted: true,\n     reading: false,\n     sync: false,\n     needReadable: false,\n     emittedReadable: false,\n     readableListening: false,\n     resumeScheduled: false,\n     paused: false,\n     emitClose: true,\n     autoDestroy: false,\n     destroyed: false,\n     defaultEncoding: 'utf8',\n     awaitDrain: 0,\n     readingMore: false,\n     decoder: null,\n     encoding: null },\n  readable: false,\n  _events:\n   [Object: null prototype] {\n     prefinish: [Function: prefinish],\n     error:\n      { [Function: bound onceWrapper] listener: [Function: error] } },\n  _eventsCount: 2,\n  _maxListeners: undefined,\n  _writableState:\n   WritableState {\n     objectMode: false,\n     highWaterMark: 16384,\n     finalCalled: false,\n     needDrain: false,\n     ending: true,\n     ended: true,\n     finished: true,\n     destroyed: false,\n     decodeStrings: true,\n     defaultEncoding: 'utf8',\n     length: 0,\n     writing: false,\n     corked: 0,\n     sync: false,\n     bufferProcessing: false,\n     onwrite: [Function: bound onwrite],\n     writecb: null,\n     writelen: 0,\n     bufferedRequest: null,\n     lastBufferedRequest: null,\n     pendingcb: 0,\n     prefinished: true,\n     errorEmitted: false,\n     emitClose: true,\n     autoDestroy: false,\n     bufferedRequestCount: 0,\n     corkedRequestsFree:\n      { next: null,\n        entry: null,\n        finish: [Function: bound onCorkedFinish] } },\n  writable: false,\n  allowHalfOpen: true,\n  _transformState:\n   { afterTransform: [Function: bound afterTransform],\n     needTransform: false,\n     transforming: false,\n     writecb: null,\n     writechunk: null,\n     writeencoding: 'buffer' },\n  socket:\n   TLSSocket {\n     _tlsOptions:\n      { pipe: false,\n        secureContext: [SecureContext],\n        isServer: false,\n        requestCert: true,\n        rejectUnauthorized: false,\n        session: undefined,\n        ALPNProtocols: undefined,\n        requestOCSP: undefined },\n     _secureEstablished: true,\n     _securePending: false,\n     _newSessionPending: false,\n     _controlReleased: true,\n     _SNICallback: null,\n     servername: 'localhost',\n     alpnProtocol: false,\n     authorized: false,\n     authorizationError: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n     encrypted: true,\n     _events:\n      [Object: null prototype] {\n        close: [Array],\n        end: [Function: onReadableStreamEnd],\n        newListener: [Function: keylogNewListener],\n        secure: [Function: onConnectSecure],\n        free: [Function: onFree],\n        agentRemove: [Function: onRemove],\n        drain: [Function: ondrain],\n        error: [Function: socketErrorListener] },\n     _eventsCount: 8,\n     connecting: false,\n     _hadError: false,\n     _handle: null,\n     _parent: null,\n     _host: 'localhost',\n     _readableState:\n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: true,\n        endEmitted: true,\n        reading: false,\n        sync: false,\n        needReadable: false,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: false,\n        autoDestroy: false,\n        destroyed: true,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: false,\n     _maxListeners: undefined,\n     _writableState:\n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: true,\n        needDrain: false,\n        ending: true,\n        ended: true,\n        finished: true,\n        destroyed: true,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: true,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: false,\n     allowHalfOpen: false,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: undefined,\n     _server: null,\n     ssl: null,\n     _requestCert: true,\n     _rejectUnauthorized: false,\n     parser: null,\n     _httpMessage:\n      ClientRequest {\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: false,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        socket: [Circular],\n        connection: [Circular],\n        _header:\n         'GET /ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863 HTTP/1.1\\r\\nuser-agent: got/7.1.0 (https://github.com/sindresorhus/got)\\r\\naccept-encoding: gzip,deflate\\r\\naccept: application/json\\r\\nHost: localhost:3000\\r\\nConnection: close\\r\\n\\r\\n',\n        _onPendingData: [Function: noopPendingOutput],\n        agent: [Agent],\n        socketPath: undefined,\n        timeout: undefined,\n        method: 'GET',\n        insecureHTTPParser: undefined,\n        path:\n         '/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n        _ended: true,\n        res: [IncomingMessage],\n        aborted: undefined,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     write: [Function: writeAfterFIN],\n     [Symbol(res)]: null,\n     [Symbol(asyncId)]: 163,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(timeout)]: null,\n     [Symbol(kBytesRead)]: 2124,\n     [Symbol(kBytesWritten)]: 250,\n     [Symbol(connect-options)]:\n      { rejectUnauthorized: false,\n        ciphers:\n         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n        checkServerIdentity: [Function: checkServerIdentity],\n        minDHSize: 1024,\n        encoding: null,\n        _agentKey:\n         'localhost:3000:::-----BEGIN CERTIFICATE-----\\r\\nMIIEeTCCAmGgAwIBAgIBATANBgkqhkiG9w0BAQsFADAAMB4XDTIxMDUxNTE3MDMy\\r\\nNFoXDTIxMDUxNTE3MDMyNFowADCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC\\r\\nggIBALZ51wKd3R6/hc0Gh8PnrHtzMJcxGy4dhq3l18wqKAEZ4KlwgrshsFwSxFe3\\r\\nymhSME9a+96uQ+vVKZ8IaxHNgne6jwT4+i+YRMURfqFeNwNPRGRmvvFw6dFVKSD2\\r\\nMVN6PD5FcFazDPyaViGRaRfuQ1Ftbb/ITwRiRVG1TtUztvro9kzYe6SRvcsKkUVF\\r\\nk4NJAZjx+JVoNjgZYtdZ0PnPpV9/2OgxaJfY0ZsBNx7jvqVbu972Q3+D0rot1SBk\\r\\num71wprpMzLSN+QdW3NR517sEYPLE3kb21D6lQmTABfNxqq1MgouopG97MEGlAqH\\r\\nTi5Uw2r4tsWZingUazTVf3fg5xDiZSE0RQgq9JN79miIlwrxJZsaR2bJdcWe6xlA\\r\\n4+d7kxWJkL9MyIoXy6w4OfCMAz+xUJtngmSTFr9tZO31OYWoVhHXBx9s5pg29u3p\\r\\n7is5UcS4drjD1q9b+LZ92YKwnP177CbfPXhwjUL/HuknymxSKsSQBhcYjtB028Zj\\r\\nhiyyAJqZ7XFC+HRvhNXjB8Xzyy912M53/oSKQjDTMAhrFXi0nzbCe4BOmRL8LQrR\\r\\n20vF1hIBXoIYYBAXJnRLdS2vd3wZdjkLNaE7cgRVQCnaDWEQqIdaonv5OY0AX7WL\\r\\ngh+E+YFThCX4UQFpHlQk+ksWm7DBl3Tni7M8X8t6j0Ra8qh5AgMBAAEwDQYJKoZI\\r\\nhvcNAQELBQADggIBAGLGIDeJ6AzqR08eQ5UyOzI5HBVmqjxu1hkXUdYNrSNwPjcs\\r\\nnItzhZ4TCDa/3VR7YnDDgsUUSA2OKmGKOlFFhiYc4zDH95VbbQCHY+0qpT1c7bxc\\r\\nQVXZd1KJLTZKaVENBc3ZSxnFkI9lbhZ7ghy63BbeMc6lxknI+/HgBDs6DYvFFKbN\\r\\nJZA4B2VmwSbia/IshR3szJCvW6zz4Ny5Kv5ABJ2jF2mZLifb8+USx7skBpvw1MnB\\r\\nytnUbk8IImEOtsOPkA+J2OiBpLFjg3R5D+Z+FX3NTXsjKdJZXhPksEkF9afuI81M\\r\\nEN7XCdu+m/TOas4tJN9iR/uEvKt9X9X/rFK8M7EmKRT0L5vFj//3U5bGvACCQfiZ\\r\\n9n680kKoVkYgI2PrMDCnBFZkTVX6K4sSlwha+BqczUu50XAJ6sP3jS++NMLRYnuB\\r\\nKd/E55fUyheT7JsOniwSQ62jItEGuZ6G6PvudyFUCN9D2dUxTfCKsfbcfjjlT9gi\\r\\nX1F++CgNWmsuSS3ytuZhrBFDBl3pgNq9cC0zdVpCI6IZgLweudqFoRHmDt+clOGG\\r\\niE1Kowm2ja3VMjAj8SJCLnHQKMPdbjlnQc3bZAnovD6noKogaAQcLO4sBcedELjU\\r\\nacx0/3BnDnxP2X48jd2/g+DJTQ8onh4wu4DW7TKsqGg2BOmFPwQX1+6wR866\\r\\n-----END CERTIFICATE-----\\r\\n:::-----BEGIN RSA PRIVATE KEY-----\\r\\n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\\r\\n-----END RSA PRIVATE KEY-----\\r\\n::false::::::::::',\n        followRedirect: true,\n        method: 'GET',\n        headers: [Object],\n        cert:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 45 65 54 43 43 41 6d 47 67 41 77 49 42 41 67 49 42 41 ... >,\n        key:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 4b 51 49 42 41 41 4b 43 41 67 45 41 74 ... >,\n        json: true,\n        href:\n         'https://localhost:3000/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n        pathname: '/ca',\n        search:\n         '?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n        hash: null,\n        hostname: 'localhost',\n        port: '3000',\n        host: 'localhost',\n        auth: null,\n        slashes: true,\n        protocol: 'https:',\n        useElectronNet: true,\n        decompress: true,\n        retries: [Function],\n        path: null,\n        _defaultAgent: [Agent],\n        servername: 'localhost',\n        singleUse: true } },\n  connection:\n   TLSSocket {\n     _tlsOptions:\n      { pipe: false,\n        secureContext: [SecureContext],\n        isServer: false,\n        requestCert: true,\n        rejectUnauthorized: false,\n        session: undefined,\n        ALPNProtocols: undefined,\n        requestOCSP: undefined },\n     _secureEstablished: true,\n     _securePending: false,\n     _newSessionPending: false,\n     _controlReleased: true,\n     _SNICallback: null,\n     servername: 'localhost',\n     alpnProtocol: false,\n     authorized: false,\n     authorizationError: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n     encrypted: true,\n     _events:\n      [Object: null prototype] {\n        close: [Array],\n        end: [Function: onReadableStreamEnd],\n        newListener: [Function: keylogNewListener],\n        secure: [Function: onConnectSecure],\n        free: [Function: onFree],\n        agentRemove: [Function: onRemove],\n        drain: [Function: ondrain],\n        error: [Function: socketErrorListener] },\n     _eventsCount: 8,\n     connecting: false,\n     _hadError: false,\n     _handle: null,\n     _parent: null,\n     _host: 'localhost',\n     _readableState:\n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: true,\n        endEmitted: true,\n        reading: false,\n        sync: false,\n        needReadable: false,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: false,\n        autoDestroy: false,\n        destroyed: true,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: false,\n     _maxListeners: undefined,\n     _writableState:\n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: true,\n        needDrain: false,\n        ending: true,\n        ended: true,\n        finished: true,\n        destroyed: true,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: true,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: false,\n     allowHalfOpen: false,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: undefined,\n     _server: null,\n     ssl: null,\n     _requestCert: true,\n     _rejectUnauthorized: false,\n     parser: null,\n     _httpMessage:\n      ClientRequest {\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: false,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        socket: [Circular],\n        connection: [Circular],\n        _header:\n         'GET /ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863 HTTP/1.1\\r\\nuser-agent: got/7.1.0 (https://github.com/sindresorhus/got)\\r\\naccept-encoding: gzip,deflate\\r\\naccept: application/json\\r\\nHost: localhost:3000\\r\\nConnection: close\\r\\n\\r\\n',\n        _onPendingData: [Function: noopPendingOutput],\n        agent: [Agent],\n        socketPath: undefined,\n        timeout: undefined,\n        method: 'GET',\n        insecureHTTPParser: undefined,\n        path:\n         '/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n        _ended: true,\n        res: [IncomingMessage],\n        aborted: undefined,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     write: [Function: writeAfterFIN],\n     [Symbol(res)]: null,\n     [Symbol(asyncId)]: 163,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(timeout)]: null,\n     [Symbol(kBytesRead)]: 2124,\n     [Symbol(kBytesWritten)]: 250,\n     [Symbol(connect-options)]:\n      { rejectUnauthorized: false,\n        ciphers:\n         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n        checkServerIdentity: [Function: checkServerIdentity],\n        minDHSize: 1024,\n        encoding: null,\n        _agentKey:\n         'localhost:3000:::-----BEGIN CERTIFICATE-----\\r\\nMIIEeTCCAmGgAwIBAgIBATANBgkqhkiG9w0BAQsFADAAMB4XDTIxMDUxNTE3MDMy\\r\\nNFoXDTIxMDUxNTE3MDMyNFowADCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC\\r\\nggIBALZ51wKd3R6/hc0Gh8PnrHtzMJcxGy4dhq3l18wqKAEZ4KlwgrshsFwSxFe3\\r\\nymhSME9a+96uQ+vVKZ8IaxHNgne6jwT4+i+YRMURfqFeNwNPRGRmvvFw6dFVKSD2\\r\\nMVN6PD5FcFazDPyaViGRaRfuQ1Ftbb/ITwRiRVG1TtUztvro9kzYe6SRvcsKkUVF\\r\\nk4NJAZjx+JVoNjgZYtdZ0PnPpV9/2OgxaJfY0ZsBNx7jvqVbu972Q3+D0rot1SBk\\r\\num71wprpMzLSN+QdW3NR517sEYPLE3kb21D6lQmTABfNxqq1MgouopG97MEGlAqH\\r\\nTi5Uw2r4tsWZingUazTVf3fg5xDiZSE0RQgq9JN79miIlwrxJZsaR2bJdcWe6xlA\\r\\n4+d7kxWJkL9MyIoXy6w4OfCMAz+xUJtngmSTFr9tZO31OYWoVhHXBx9s5pg29u3p\\r\\n7is5UcS4drjD1q9b+LZ92YKwnP177CbfPXhwjUL/HuknymxSKsSQBhcYjtB028Zj\\r\\nhiyyAJqZ7XFC+HRvhNXjB8Xzyy912M53/oSKQjDTMAhrFXi0nzbCe4BOmRL8LQrR\\r\\n20vF1hIBXoIYYBAXJnRLdS2vd3wZdjkLNaE7cgRVQCnaDWEQqIdaonv5OY0AX7WL\\r\\ngh+E+YFThCX4UQFpHlQk+ksWm7DBl3Tni7M8X8t6j0Ra8qh5AgMBAAEwDQYJKoZI\\r\\nhvcNAQELBQADggIBAGLGIDeJ6AzqR08eQ5UyOzI5HBVmqjxu1hkXUdYNrSNwPjcs\\r\\nnItzhZ4TCDa/3VR7YnDDgsUUSA2OKmGKOlFFhiYc4zDH95VbbQCHY+0qpT1c7bxc\\r\\nQVXZd1KJLTZKaVENBc3ZSxnFkI9lbhZ7ghy63BbeMc6lxknI+/HgBDs6DYvFFKbN\\r\\nJZA4B2VmwSbia/IshR3szJCvW6zz4Ny5Kv5ABJ2jF2mZLifb8+USx7skBpvw1MnB\\r\\nytnUbk8IImEOtsOPkA+J2OiBpLFjg3R5D+Z+FX3NTXsjKdJZXhPksEkF9afuI81M\\r\\nEN7XCdu+m/TOas4tJN9iR/uEvKt9X9X/rFK8M7EmKRT0L5vFj//3U5bGvACCQfiZ\\r\\n9n680kKoVkYgI2PrMDCnBFZkTVX6K4sSlwha+BqczUu50XAJ6sP3jS++NMLRYnuB\\r\\nKd/E55fUyheT7JsOniwSQ62jItEGuZ6G6PvudyFUCN9D2dUxTfCKsfbcfjjlT9gi\\r\\nX1F++CgNWmsuSS3ytuZhrBFDBl3pgNq9cC0zdVpCI6IZgLweudqFoRHmDt+clOGG\\r\\niE1Kowm2ja3VMjAj8SJCLnHQKMPdbjlnQc3bZAnovD6noKogaAQcLO4sBcedELjU\\r\\nacx0/3BnDnxP2X48jd2/g+DJTQ8onh4wu4DW7TKsqGg2BOmFPwQX1+6wR866\\r\\n-----END CERTIFICATE-----\\r\\n:::-----BEGIN RSA PRIVATE KEY-----\\r\\n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\\r\\n-----END RSA PRIVATE KEY-----\\r\\n::false::::::::::',\n        followRedirect: true,\n        method: 'GET',\n        headers: [Object],\n        cert:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 45 65 54 43 43 41 6d 47 67 41 77 49 42 41 67 49 42 41 ... >,\n        key:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 4b 51 49 42 41 41 4b 43 41 67 45 41 74 ... >,\n        json: true,\n        href:\n         'https://localhost:3000/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n        pathname: '/ca',\n        search:\n         '?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n        hash: null,\n        hostname: 'localhost',\n        port: '3000',\n        host: 'localhost',\n        auth: null,\n        slashes: true,\n        protocol: 'https:',\n        useElectronNet: true,\n        decompress: true,\n        retries: [Function],\n        path: null,\n        _defaultAgent: [Agent],\n        servername: 'localhost',\n        singleUse: true } },\n  httpVersionMajor: 1,\n  httpVersionMinor: 1,\n  httpVersion: '1.1',\n  complete: false,\n  headers:\n   { 'x-dns-prefetch-control': 'off',\n     'x-frame-options': 'SAMEORIGIN',\n     'strict-transport-security': 'max-age=15552000; includeSubDomains',\n     'x-download-options': 'noopen',\n     'x-content-type-options': 'nosniff',\n     'x-xss-protection': '1; mode=block',\n     'surrogate-control': 'no-store',\n     'cache-control': 'no-store, no-cache, must-revalidate, proxy-revalidate',\n     pragma: 'no-cache',\n     expires: '0',\n     'content-type': 'application/json; charset=utf-8',\n     etag: 'W/\"7e9-J1RDS28jzR7/EVagjzZUKO9qlnI\"',\n     vary: 'Accept-Encoding',\n     'content-encoding': 'gzip',\n     date: 'Sat, 15 May 2021 22:03:48 GMT',\n     connection: 'close',\n     'transfer-encoding': 'chunked' },\n  rawHeaders:\n   [ 'X-DNS-Prefetch-Control',\n     'off',\n     'X-Frame-Options',\n     'SAMEORIGIN',\n     'Strict-Transport-Security',\n     'max-age=15552000; includeSubDomains',\n     'X-Download-Options',\n     'noopen',\n     'X-Content-Type-Options',\n     'nosniff',\n     'X-XSS-Protection',\n     '1; mode=block',\n     'Surrogate-Control',\n     'no-store',\n     'Cache-Control',\n     'no-store, no-cache, must-revalidate, proxy-revalidate',\n     'Pragma',\n     'no-cache',\n     'Expires',\n     '0',\n     'Content-Type',\n     'application/json; charset=utf-8',\n     'ETag',\n     'W/\"7e9-J1RDS28jzR7/EVagjzZUKO9qlnI\"',\n     'Vary',\n     'Accept-Encoding',\n     'Content-Encoding',\n     'gzip',\n     'Date',\n     'Sat, 15 May 2021 22:03:48 GMT',\n     'Connection',\n     'close',\n     'Transfer-Encoding',\n     'chunked' ],\n  trailers: {},\n  rawTrailers: [],\n  aborted: false,\n  upgrade: false,\n  url:\n   'https://localhost:3000/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n  method: null,\n  statusCode: 200,\n  statusMessage: 'OK',\n  client:\n   TLSSocket {\n     _tlsOptions:\n      { pipe: false,\n        secureContext: [SecureContext],\n        isServer: false,\n        requestCert: true,\n        rejectUnauthorized: false,\n        session: undefined,\n        ALPNProtocols: undefined,\n        requestOCSP: undefined },\n     _secureEstablished: true,\n     _securePending: false,\n     _newSessionPending: false,\n     _controlReleased: true,\n     _SNICallback: null,\n     servername: 'localhost',\n     alpnProtocol: false,\n     authorized: false,\n     authorizationError: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n     encrypted: true,\n     _events:\n      [Object: null prototype] {\n        close: [Array],\n        end: [Function: onReadableStreamEnd],\n        newListener: [Function: keylogNewListener],\n        secure: [Function: onConnectSecure],\n        free: [Function: onFree],\n        agentRemove: [Function: onRemove],\n        drain: [Function: ondrain],\n        error: [Function: socketErrorListener] },\n     _eventsCount: 8,\n     connecting: false,\n     _hadError: false,\n     _handle: null,\n     _parent: null,\n     _host: 'localhost',\n     _readableState:\n      ReadableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        buffer: BufferList { head: null, tail: null, length: 0 },\n        length: 0,\n        pipes: null,\n        pipesCount: 0,\n        flowing: true,\n        ended: true,\n        endEmitted: true,\n        reading: false,\n        sync: false,\n        needReadable: false,\n        emittedReadable: false,\n        readableListening: false,\n        resumeScheduled: false,\n        paused: false,\n        emitClose: false,\n        autoDestroy: false,\n        destroyed: true,\n        defaultEncoding: 'utf8',\n        awaitDrain: 0,\n        readingMore: false,\n        decoder: null,\n        encoding: null },\n     readable: false,\n     _maxListeners: undefined,\n     _writableState:\n      WritableState {\n        objectMode: false,\n        highWaterMark: 16384,\n        finalCalled: true,\n        needDrain: false,\n        ending: true,\n        ended: true,\n        finished: true,\n        destroyed: true,\n        decodeStrings: false,\n        defaultEncoding: 'utf8',\n        length: 0,\n        writing: false,\n        corked: 0,\n        sync: false,\n        bufferProcessing: false,\n        onwrite: [Function: bound onwrite],\n        writecb: null,\n        writelen: 0,\n        bufferedRequest: null,\n        lastBufferedRequest: null,\n        pendingcb: 0,\n        prefinished: true,\n        errorEmitted: false,\n        emitClose: false,\n        autoDestroy: false,\n        bufferedRequestCount: 0,\n        corkedRequestsFree: [Object] },\n     writable: false,\n     allowHalfOpen: false,\n     _sockname: null,\n     _pendingData: null,\n     _pendingEncoding: '',\n     server: undefined,\n     _server: null,\n     ssl: null,\n     _requestCert: true,\n     _rejectUnauthorized: false,\n     parser: null,\n     _httpMessage:\n      ClientRequest {\n        _events: [Object],\n        _eventsCount: 2,\n        _maxListeners: undefined,\n        output: [],\n        outputEncodings: [],\n        outputCallbacks: [],\n        outputSize: 0,\n        writable: true,\n        _last: true,\n        chunkedEncoding: false,\n        shouldKeepAlive: false,\n        useChunkedEncodingByDefault: false,\n        sendDate: false,\n        _removedConnection: false,\n        _removedContLen: false,\n        _removedTE: false,\n        _contentLength: 0,\n        _hasBody: true,\n        _trailer: '',\n        finished: true,\n        _headerSent: true,\n        socket: [Circular],\n        connection: [Circular],\n        _header:\n         'GET /ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863 HTTP/1.1\\r\\nuser-agent: got/7.1.0 (https://github.com/sindresorhus/got)\\r\\naccept-encoding: gzip,deflate\\r\\naccept: application/json\\r\\nHost: localhost:3000\\r\\nConnection: close\\r\\n\\r\\n',\n        _onPendingData: [Function: noopPendingOutput],\n        agent: [Agent],\n        socketPath: undefined,\n        timeout: undefined,\n        method: 'GET',\n        insecureHTTPParser: undefined,\n        path:\n         '/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n        _ended: true,\n        res: [IncomingMessage],\n        aborted: undefined,\n        timeoutCb: null,\n        upgradeOrConnect: false,\n        parser: null,\n        maxHeadersCount: null,\n        [Symbol(isCorked)]: false,\n        [Symbol(outHeadersKey)]: [Object] },\n     write: [Function: writeAfterFIN],\n     [Symbol(res)]: null,\n     [Symbol(asyncId)]: 163,\n     [Symbol(lastWriteQueueSize)]: 0,\n     [Symbol(timeout)]: null,\n     [Symbol(kBytesRead)]: 2124,\n     [Symbol(kBytesWritten)]: 250,\n     [Symbol(connect-options)]:\n      { rejectUnauthorized: false,\n        ciphers:\n         'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n        checkServerIdentity: [Function: checkServerIdentity],\n        minDHSize: 1024,\n        encoding: null,\n        _agentKey:\n         'localhost:3000:::-----BEGIN CERTIFICATE-----\\r\\nMIIEeTCCAmGgAwIBAgIBATANBgkqhkiG9w0BAQsFADAAMB4XDTIxMDUxNTE3MDMy\\r\\nNFoXDTIxMDUxNTE3MDMyNFowADCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoC\\r\\nggIBALZ51wKd3R6/hc0Gh8PnrHtzMJcxGy4dhq3l18wqKAEZ4KlwgrshsFwSxFe3\\r\\nymhSME9a+96uQ+vVKZ8IaxHNgne6jwT4+i+YRMURfqFeNwNPRGRmvvFw6dFVKSD2\\r\\nMVN6PD5FcFazDPyaViGRaRfuQ1Ftbb/ITwRiRVG1TtUztvro9kzYe6SRvcsKkUVF\\r\\nk4NJAZjx+JVoNjgZYtdZ0PnPpV9/2OgxaJfY0ZsBNx7jvqVbu972Q3+D0rot1SBk\\r\\num71wprpMzLSN+QdW3NR517sEYPLE3kb21D6lQmTABfNxqq1MgouopG97MEGlAqH\\r\\nTi5Uw2r4tsWZingUazTVf3fg5xDiZSE0RQgq9JN79miIlwrxJZsaR2bJdcWe6xlA\\r\\n4+d7kxWJkL9MyIoXy6w4OfCMAz+xUJtngmSTFr9tZO31OYWoVhHXBx9s5pg29u3p\\r\\n7is5UcS4drjD1q9b+LZ92YKwnP177CbfPXhwjUL/HuknymxSKsSQBhcYjtB028Zj\\r\\nhiyyAJqZ7XFC+HRvhNXjB8Xzyy912M53/oSKQjDTMAhrFXi0nzbCe4BOmRL8LQrR\\r\\n20vF1hIBXoIYYBAXJnRLdS2vd3wZdjkLNaE7cgRVQCnaDWEQqIdaonv5OY0AX7WL\\r\\ngh+E+YFThCX4UQFpHlQk+ksWm7DBl3Tni7M8X8t6j0Ra8qh5AgMBAAEwDQYJKoZI\\r\\nhvcNAQELBQADggIBAGLGIDeJ6AzqR08eQ5UyOzI5HBVmqjxu1hkXUdYNrSNwPjcs\\r\\nnItzhZ4TCDa/3VR7YnDDgsUUSA2OKmGKOlFFhiYc4zDH95VbbQCHY+0qpT1c7bxc\\r\\nQVXZd1KJLTZKaVENBc3ZSxnFkI9lbhZ7ghy63BbeMc6lxknI+/HgBDs6DYvFFKbN\\r\\nJZA4B2VmwSbia/IshR3szJCvW6zz4Ny5Kv5ABJ2jF2mZLifb8+USx7skBpvw1MnB\\r\\nytnUbk8IImEOtsOPkA+J2OiBpLFjg3R5D+Z+FX3NTXsjKdJZXhPksEkF9afuI81M\\r\\nEN7XCdu+m/TOas4tJN9iR/uEvKt9X9X/rFK8M7EmKRT0L5vFj//3U5bGvACCQfiZ\\r\\n9n680kKoVkYgI2PrMDCnBFZkTVX6K4sSlwha+BqczUu50XAJ6sP3jS++NMLRYnuB\\r\\nKd/E55fUyheT7JsOniwSQ62jItEGuZ6G6PvudyFUCN9D2dUxTfCKsfbcfjjlT9gi\\r\\nX1F++CgNWmsuSS3ytuZhrBFDBl3pgNq9cC0zdVpCI6IZgLweudqFoRHmDt+clOGG\\r\\niE1Kowm2ja3VMjAj8SJCLnHQKMPdbjlnQc3bZAnovD6noKogaAQcLO4sBcedELjU\\r\\nacx0/3BnDnxP2X48jd2/g+DJTQ8onh4wu4DW7TKsqGg2BOmFPwQX1+6wR866\\r\\n-----END CERTIFICATE-----\\r\\n:::-----BEGIN RSA PRIVATE KEY-----\\r\\n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\\r\\n-----END RSA PRIVATE KEY-----\\r\\n::false::::::::::',\n        followRedirect: true,\n        method: 'GET',\n        headers: [Object],\n        cert:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 45 65 54 43 43 41 6d 47 67 41 77 49 42 41 67 49 42 41 ... >,\n        key:\n         <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 4a 4b 51 49 42 41 41 4b 43 41 67 45 41 74 ... >,\n        json: true,\n        href:\n         'https://localhost:3000/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n        pathname: '/ca',\n        search:\n         '?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n        hash: null,\n        hostname: 'localhost',\n        port: '3000',\n        host: 'localhost',\n        auth: null,\n        slashes: true,\n        protocol: 'https:',\n        useElectronNet: true,\n        decompress: true,\n        retries: [Function],\n        path: null,\n        _defaultAgent: [Agent],\n        servername: 'localhost',\n        singleUse: true } },\n  _consuming: false,\n  _dumped: false,\n  req:\n   ClientRequest {\n     _events:\n      [Object: null prototype] { error: [Function], prefinish: [Function: requestOnPrefinish] },\n     _eventsCount: 2,\n     _maxListeners: undefined,\n     output: [],\n     outputEncodings: [],\n     outputCallbacks: [],\n     outputSize: 0,\n     writable: true,\n     _last: true,\n     chunkedEncoding: false,\n     shouldKeepAlive: false,\n     useChunkedEncodingByDefault: false,\n     sendDate: false,\n     _removedConnection: false,\n     _removedContLen: false,\n     _removedTE: false,\n     _contentLength: 0,\n     _hasBody: true,\n     _trailer: '',\n     finished: true,\n     _headerSent: true,\n     socket:\n      TLSSocket {\n        _tlsOptions: [Object],\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        _SNICallback: null,\n        servername: 'localhost',\n        alpnProtocol: false,\n        authorized: false,\n        authorizationError: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n        encrypted: true,\n        _events: [Object],\n        _eventsCount: 8,\n        connecting: false,\n        _hadError: false,\n        _handle: null,\n        _parent: null,\n        _host: 'localhost',\n        _readableState: [ReadableState],\n        readable: false,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: false,\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: null,\n        _requestCert: true,\n        _rejectUnauthorized: false,\n        parser: null,\n        _httpMessage: [Circular],\n        write: [Function: writeAfterFIN],\n        [Symbol(res)]: null,\n        [Symbol(asyncId)]: 163,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBytesRead)]: 2124,\n        [Symbol(kBytesWritten)]: 250,\n        [Symbol(connect-options)]: [Object] },\n     connection:\n      TLSSocket {\n        _tlsOptions: [Object],\n        _secureEstablished: true,\n        _securePending: false,\n        _newSessionPending: false,\n        _controlReleased: true,\n        _SNICallback: null,\n        servername: 'localhost',\n        alpnProtocol: false,\n        authorized: false,\n        authorizationError: 'UNABLE_TO_VERIFY_LEAF_SIGNATURE',\n        encrypted: true,\n        _events: [Object],\n        _eventsCount: 8,\n        connecting: false,\n        _hadError: false,\n        _handle: null,\n        _parent: null,\n        _host: 'localhost',\n        _readableState: [ReadableState],\n        readable: false,\n        _maxListeners: undefined,\n        _writableState: [WritableState],\n        writable: false,\n        allowHalfOpen: false,\n        _sockname: null,\n        _pendingData: null,\n        _pendingEncoding: '',\n        server: undefined,\n        _server: null,\n        ssl: null,\n        _requestCert: true,\n        _rejectUnauthorized: false,\n        parser: null,\n        _httpMessage: [Circular],\n        write: [Function: writeAfterFIN],\n        [Symbol(res)]: null,\n        [Symbol(asyncId)]: 163,\n        [Symbol(lastWriteQueueSize)]: 0,\n        [Symbol(timeout)]: null,\n        [Symbol(kBytesRead)]: 2124,\n        [Symbol(kBytesWritten)]: 250,\n        [Symbol(connect-options)]: [Object] },\n     _header:\n      'GET /ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863 HTTP/1.1\\r\\nuser-agent: got/7.1.0 (https://github.com/sindresorhus/got)\\r\\naccept-encoding: gzip,deflate\\r\\naccept: application/json\\r\\nHost: localhost:3000\\r\\nConnection: close\\r\\n\\r\\n',\n     _onPendingData: [Function: noopPendingOutput],\n     agent:\n      Agent {\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        defaultPort: 443,\n        protocol: 'https:',\n        options: [Object],\n        requests: {},\n        sockets: {},\n        freeSockets: {},\n        keepAliveMsecs: 1000,\n        keepAlive: false,\n        maxSockets: Infinity,\n        maxFreeSockets: 256,\n        maxCachedSessions: 100,\n        _sessionCache: [Object] },\n     socketPath: undefined,\n     timeout: undefined,\n     method: 'GET',\n     insecureHTTPParser: undefined,\n     path:\n      '/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n     _ended: true,\n     res:\n      IncomingMessage {\n        _readableState: [ReadableState],\n        readable: false,\n        _events: [Object],\n        _eventsCount: 1,\n        _maxListeners: undefined,\n        socket: [TLSSocket],\n        connection: [TLSSocket],\n        httpVersionMajor: 1,\n        httpVersionMinor: 1,\n        httpVersion: '1.1',\n        complete: true,\n        headers: [Object],\n        rawHeaders: [Array],\n        trailers: {},\n        rawTrailers: [],\n        aborted: false,\n        upgrade: false,\n        url:\n         'https://localhost:3000/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n        method: null,\n        statusCode: 200,\n        statusMessage: 'OK',\n        client: [TLSSocket],\n        _consuming: true,\n        _dumped: false,\n        req: [Circular],\n        requestUrl:\n         'https://localhost:3000/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863' },\n     aborted: undefined,\n     timeoutCb: null,\n     upgradeOrConnect: false,\n     parser: null,\n     maxHeadersCount: null,\n     [Symbol(isCorked)]: false,\n     [Symbol(outHeadersKey)]:\n      [Object: null prototype] {\n        'user-agent': [Array],\n        'accept-encoding': [Array],\n        accept: [Array],\n        host: [Array] } },\n  requestUrl:\n   'https://localhost:3000/ca?token=aaeb185cae188916380ea979323d6b45a7fa5093b9da1f609c4a74929962c863',\n  setTimeout: [Function: bound setTimeout],\n  redirectUrls: [],\n  body:\n   { ca:\n      '-----BEGIN CERTIFICATE-----\\nMIIFjTCCA3WgAwIBAgIJAIwY4z0q5iNzMA0GCSqGSIb3DQEBCwUAMF0xCzAJBgNV\\nBAYTAklTMRIwEAYDVQQHDAlSZXlramF2aWsxHDAaBgNVBAoME0xhbWFzc3UgT3Bl\\ncmF0b3IgQ0ExHDAaBgNVBAMME2xhbWFzc3Utb3BlcmF0b3IuaXMwHhcNMjEwNTE0\\nMTcyMDQwWhcNMzEwMjExMTcyMDQwWjBdMQswCQYDVQQGEwJJUzESMBAGA1UEBwwJ\\nUmV5a2phdmlrMRwwGgYDVQQKDBNMYW1hc3N1IE9wZXJhdG9yIENBMRwwGgYDVQQD\\nDBNsYW1hc3N1LW9wZXJhdG9yLmlzMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAs6OlDAIbtxk+JOeuuHf311tgSbuSPA0IJsL3GpmYF3aTtW/nLH7dip1C\\nm6cJr0MuWVwROQOEb2kb4kkwoDzytZwrEzIyjbA9DHOIaF4Q834xPrbEl7WDNrQe\\nnVAze4dr13/qq5XN4p53gffc66i0Je1n/JbcA1+f+tQ3W9NeErUxamkVcBFuA1E7\\ndAUaY/4cDVJO01encp+nSwzP1SYt8Uh/lYARTWpAR/46JaMscGqr9nIMJF+MqUbo\\nG8NvW/yHJY6y+Zq3M03gEe+X0hLRlX4w4DJIVfFVrNdNYs8BXgaD/aGUgFKeRO9n\\nP0ZsTFfHQcMwxjuthNC57Nac2Xz7l9zacq45QoZqqycJ1S9X1N+T4SFLeu1R5ZNR\\nF2JcqSoZxwiFGvlx61haeLVKbzZhwoj2qfVho+TpfNSnHVwi/QBwDo1N316Sg7mv\\nzxcVEDyG9TK35sTN+tuC1RfyFsN03lAIYgcg1w/pzOuKYbORZ5rsHjqdaGYkdkXN\\n1nZGvvwpWhyakUQfHEyOvkfaCVweGwpDDj+Mu9mynXNSDzYm0POvo7vBHAeedhJn\\ns+/vFodWK5TnMbZnRWJwuBBsQVfc8YR/vGB6q6/3xr0XScjTUFbyHMrzagknXvz6\\ngRxqi8jKq0ETO2mB+gXpOlkUCWrjVYk/JueV4DxgxCJDuPqNAqsCAwEAAaNQME4w\\nHQYDVR0OBBYEFF9Q5uzMpAKAHR58kKzqwJLDGaW2MB8GA1UdIwQYMBaAFF9Q5uzM\\npAKAHR58kKzqwJLDGaW2MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggIB\\nAK0RWZQpBvDmBgz+ge9fICu91H4cq4oh/cDjgwsudJYLl077DXgsnzUCFWS0HCOP\\nS/pk4IdUW7iwqhoDdmt/Qy/Gsk+Qe4HTOIq/ucDq4ineHxmX+K1hBkCaWb6K3Psn\\n2qiISNPi67Gh/Us4u53HNb4Fld++qN4IcwQxcZDyJU41Nd10GEQV4Ozvea0F1tlV\\nJluEDm4hdjG3+4AmYMlXoKNebENlc3cTGRE4/jK7clnVoqGDBlJTLSoWB7hXYY25\\np/wHwa1NTaU+hzV+2L6R1G1wDRKklGlEzDqFoco5d4LWzCvPZRHwmA0tlQq/4OI/\\nfs14QLxNA7RfBEuND+WuV2JFml5HwwXjzk0kLuiOC+foehCE89HtngrnDtRpl5mV\\nfHIROBngtDa5yYVU6QX3Z6U+leKV4eT6gem+Kb71lYUf6pEKRyF4wHcyNtVOrqlJ\\nBBP5rb+ZiuVwiMFyRzu+oPG0nhHQ7/kko7yldwL0c5Q+xLZxdi6ri8Evz49LZHcJ\\nOtOckRd9peKDEG9jqi/F3t+hFI/rPYiFKcpdBwyMS3HYonYKJBmIl4wp+qbA1U/I\\nGnVokPoFmLFAgNuP135lKNG0PePmeKvYeIa7kBwyHEc2iWvUM9TWCs9m/rK113EZ\\nSNjFPeBbry/bNixRbxibeo2wRHs6eGLJaPTg8lusB3N8\\n-----END CERTIFICATE-----\\n' } }"}
{"id":"2ad08f7e-2119-4ab8-a912-53a136bb8b63","timestamp":"2021-05-15T22:03:50.922Z","serial":0,"level":"LOG","msg":"{ host: 'localhost',\n  ca:\n   '-----BEGIN CERTIFICATE-----\\nMIIFjTCCA3WgAwIBAgIJAIwY4z0q5iNzMA0GCSqGSIb3DQEBCwUAMF0xCzAJBgNV\\nBAYTAklTMRIwEAYDVQQHDAlSZXlramF2aWsxHDAaBgNVBAoME0xhbWFzc3UgT3Bl\\ncmF0b3IgQ0ExHDAaBgNVBAMME2xhbWFzc3Utb3BlcmF0b3IuaXMwHhcNMjEwNTE0\\nMTcyMDQwWhcNMzEwMjExMTcyMDQwWjBdMQswCQYDVQQGEwJJUzESMBAGA1UEBwwJ\\nUmV5a2phdmlrMRwwGgYDVQQKDBNMYW1hc3N1IE9wZXJhdG9yIENBMRwwGgYDVQQD\\nDBNsYW1hc3N1LW9wZXJhdG9yLmlzMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIIC\\nCgKCAgEAs6OlDAIbtxk+JOeuuHf311tgSbuSPA0IJsL3GpmYF3aTtW/nLH7dip1C\\nm6cJr0MuWVwROQOEb2kb4kkwoDzytZwrEzIyjbA9DHOIaF4Q834xPrbEl7WDNrQe\\nnVAze4dr13/qq5XN4p53gffc66i0Je1n/JbcA1+f+tQ3W9NeErUxamkVcBFuA1E7\\ndAUaY/4cDVJO01encp+nSwzP1SYt8Uh/lYARTWpAR/46JaMscGqr9nIMJF+MqUbo\\nG8NvW/yHJY6y+Zq3M03gEe+X0hLRlX4w4DJIVfFVrNdNYs8BXgaD/aGUgFKeRO9n\\nP0ZsTFfHQcMwxjuthNC57Nac2Xz7l9zacq45QoZqqycJ1S9X1N+T4SFLeu1R5ZNR\\nF2JcqSoZxwiFGvlx61haeLVKbzZhwoj2qfVho+TpfNSnHVwi/QBwDo1N316Sg7mv\\nzxcVEDyG9TK35sTN+tuC1RfyFsN03lAIYgcg1w/pzOuKYbORZ5rsHjqdaGYkdkXN\\n1nZGvvwpWhyakUQfHEyOvkfaCVweGwpDDj+Mu9mynXNSDzYm0POvo7vBHAeedhJn\\ns+/vFodWK5TnMbZnRWJwuBBsQVfc8YR/vGB6q6/3xr0XScjTUFbyHMrzagknXvz6\\ngRxqi8jKq0ETO2mB+gXpOlkUCWrjVYk/JueV4DxgxCJDuPqNAqsCAwEAAaNQME4w\\nHQYDVR0OBBYEFF9Q5uzMpAKAHR58kKzqwJLDGaW2MB8GA1UdIwQYMBaAFF9Q5uzM\\npAKAHR58kKzqwJLDGaW2MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggIB\\nAK0RWZQpBvDmBgz+ge9fICu91H4cq4oh/cDjgwsudJYLl077DXgsnzUCFWS0HCOP\\nS/pk4IdUW7iwqhoDdmt/Qy/Gsk+Qe4HTOIq/ucDq4ineHxmX+K1hBkCaWb6K3Psn\\n2qiISNPi67Gh/Us4u53HNb4Fld++qN4IcwQxcZDyJU41Nd10GEQV4Ozvea0F1tlV\\nJluEDm4hdjG3+4AmYMlXoKNebENlc3cTGRE4/jK7clnVoqGDBlJTLSoWB7hXYY25\\np/wHwa1NTaU+hzV+2L6R1G1wDRKklGlEzDqFoco5d4LWzCvPZRHwmA0tlQq/4OI/\\nfs14QLxNA7RfBEuND+WuV2JFml5HwwXjzk0kLuiOC+foehCE89HtngrnDtRpl5mV\\nfHIROBngtDa5yYVU6QX3Z6U+leKV4eT6gem+Kb71lYUf6pEKRyF4wHcyNtVOrqlJ\\nBBP5rb+ZiuVwiMFyRzu+oPG0nhHQ7/kko7yldwL0c5Q+xLZxdi6ri8Evz49LZHcJ\\nOtOckRd9peKDEG9jqi/F3t+hFI/rPYiFKcpdBwyMS3HYonYKJBmIl4wp+qbA1U/I\\nGnVokPoFmLFAgNuP135lKNG0PePmeKvYeIa7kBwyHEc2iWvUM9TWCs9m/rK113EZ\\nSNjFPeBbry/bNixRbxibeo2wRHs6eGLJaPTg8lusB3N8\\n-----END CERTIFICATE-----\\n' }"}
{"id":"220e7099-fc4a-46d2-8ece-c0872de5b0a4","timestamp":"2021-05-15T22:03:50.939Z","serial":0,"level":"LOG","msg":"new brain state: booting"}
{"id":"3d836bfe-3a8d-4697-9a83-94f2eee9eb8c","timestamp":"2021-05-15T22:03:51.322Z","serial":0,"level":"LOG","msg":"Processing pending txs..."}
{"id":"56d705f4-02ed-4ee0-b0a9-c8fb00c8e624","timestamp":"2021-05-15T22:03:51.326Z","serial":0,"level":"LOG","msg":"new brain state: pendingIdle"}
{"id":"1b425116-7156-4284-8fa7-faa3d7374511","timestamp":"2021-05-15T22:03:51.330Z","serial":0,"level":"LOG","msg":"Waiting for server..."}
{"id":"52583e5b-ca6f-4da1-95a8-626ffb08546a","timestamp":"2021-05-15T22:03:51.355Z","serial":0,"level":"LOG","msg":"Processing 0 db files"}
{"id":"55c384b2-0de9-43a4-848f-5143e1781061","timestamp":"2021-05-15T22:03:51.371Z","serial":0,"level":"LOG","msg":"No pending txs to process."}
{"id":"8b943958-f3c7-4a63-ace2-38012ae95f61","timestamp":"2021-05-15T22:03:51.532Z","serial":0,"level":"LOG","msg":"Bill validator connected."}
{"id":"748232e0-e1e0-42f8-af26-066bfc081a62","timestamp":"2021-05-15T22:03:51.533Z","serial":0,"level":"LOG","msg":"Bills server listening on port 3077"}
{"id":"d5a98c85-73fe-4ce4-8641-89a259706c40","timestamp":"2021-05-15T22:03:51.806Z","serial":0,"level":"LOG","msg":"new brain state: chooseCoin"}
{"id":"64c0df26-eb66-4811-9407-fa9dd4ad21d7","timestamp":"2021-05-15T22:04:59.416Z","serial":0,"level":"LOG","msg":"new brain state: scanAddress"}
{"id":"abc20964-7121-49c0-b4bb-06a152fe83d2","timestamp":"2021-05-15T22:05:04.423Z","serial":0,"level":"LOG","msg":"DEBUG16: [main] *bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9*"}
{"id":"ceeae645-8beb-4036-9dbe-477c84662776","timestamp":"2021-05-15T22:05:04.426Z","serial":0,"level":"LOG","msg":"Failed to decode base58 address: Non-base58 character"}
{"id":"1f889d00-904c-4548-912e-3895e44457d9","timestamp":"2021-05-15T22:05:04.429Z","serial":0,"level":"LOG","msg":"Failed to decode bech32 address"}
{"id":"6dd25875-c7de-4ae6-85e7-bf7e46819e01","timestamp":"2021-05-15T22:05:04.432Z","serial":0,"level":"LOG","msg":"new brain state: invalidAddress"}
{"id":"eb4e34cb-aec6-45e2-a2a6-a57357748784","timestamp":"2021-05-15T22:05:14.436Z","serial":0,"level":"LOG","msg":"new brain state: pendingIdle"}
{"id":"8e4de35b-1708-45cb-b72f-2fe0102a0665","timestamp":"2021-05-15T22:05:14.691Z","serial":0,"level":"LOG","msg":"new brain state: chooseCoin"}
{"id":"c7468bb3-a7be-4991-8c85-5b95803bd57f","timestamp":"2021-05-15T22:09:29.698Z","serial":0,"level":"LOG","msg":"new brain state: scanAddress"}
{"id":"fe030575-567d-4565-b65e-83e0c78a7ce7","timestamp":"2021-05-15T22:09:34.703Z","serial":0,"level":"LOG","msg":"DEBUG16: [main] *bc1qamfrcyurew0zzegwtgv8k04x045w5cquqcew9*"}
{"id":"e1c71608-fd8f-4e2f-813e-bc1da9c0feb9","timestamp":"2021-05-15T22:09:34.705Z","serial":0,"level":"LOG","msg":"Failed to decode base58 address: Non-base58 character"}
{"id":"68f878da-1608-4283-89f1-930db418b782","timestamp":"2021-05-15T22:09:34.706Z","serial":0,"level":"LOG","msg":"Failed to decode bech32 address"}
{"id":"44d3caef-092e-4917-985d-9f88b506800d","timestamp":"2021-05-15T22:09:34.708Z","serial":0,"level":"LOG","msg":"new brain state: invalidAddress"}
{"id":"29d6b96f-138d-4dba-ad29-c2be9a75d29d","timestamp":"2021-05-15T22:09:44.717Z","serial":0,"level":"LOG","msg":"new brain state: pendingIdle"}
{"id":"816eb3c6-6098-4f43-992d-e13bb5474244","timestamp":"2021-05-15T22:09:45.014Z","serial":0,"level":"LOG","msg":"new brain state: chooseCoin"}
{"id":"ba314f96-d77e-453f-bbb1-fd4734102859","timestamp":"2021-05-15T22:14:05.350Z","serial":0,"level":"LOG","msg":"Temporary network hiccup [Request timed out]"}
{"id":"026a6a36-ddc1-4265-9d8f-a63dd81f6a3d","timestamp":"2021-05-15T22:24:42.675Z","serial":0,"level":"LOG","msg":"Temporary network hiccup [Request timed out]"}
